{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { EventTypes } from \"../interfaces\";\nimport EventManager from \"./EventManager\";\nimport { PointerType } from \"../../PointerType\";\nvar KeyboardEventManager = function (_EventManager) {\n  function KeyboardEventManager() {\n    var _this;\n    _classCallCheck(this, KeyboardEventManager);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, KeyboardEventManager, [].concat(args));\n    _defineProperty(_this, \"activationKeys\", ['Enter', ' ']);\n    _defineProperty(_this, \"cancelationKeys\", ['Tab']);\n    _defineProperty(_this, \"isPressed\", false);\n    _defineProperty(_this, \"keyDownCallback\", function (event) {\n      if (_this.cancelationKeys.indexOf(event.key) !== -1 && _this.isPressed) {\n        _this.dispatchEvent(event, EventTypes.CANCEL);\n        return;\n      }\n      if (_this.activationKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      _this.dispatchEvent(event, EventTypes.DOWN);\n    });\n    _defineProperty(_this, \"keyUpCallback\", function (event) {\n      if (_this.activationKeys.indexOf(event.key) === -1 || !_this.isPressed) {\n        return;\n      }\n      _this.dispatchEvent(event, EventTypes.UP);\n    });\n    return _this;\n  }\n  _inherits(KeyboardEventManager, _EventManager);\n  return _createClass(KeyboardEventManager, [{\n    key: \"dispatchEvent\",\n    value: function dispatchEvent(event, eventType) {\n      if (!(event.target instanceof HTMLElement)) {\n        return;\n      }\n      var adaptedEvent = this.mapEvent(event, eventType);\n      switch (eventType) {\n        case EventTypes.UP:\n          this.isPressed = false;\n          this.onPointerUp(adaptedEvent);\n          break;\n        case EventTypes.DOWN:\n          this.isPressed = true;\n          this.onPointerDown(adaptedEvent);\n          break;\n        case EventTypes.CANCEL:\n          this.isPressed = false;\n          this.onPointerCancel(adaptedEvent);\n          break;\n      }\n    }\n  }, {\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      this.view.addEventListener('keydown', this.keyDownCallback);\n      this.view.addEventListener('keyup', this.keyUpCallback);\n    }\n  }, {\n    key: \"unregisterListeners\",\n    value: function unregisterListeners() {\n      this.view.removeEventListener('keydown', this.keyDownCallback);\n      this.view.removeEventListener('keyup', this.keyUpCallback);\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType) {\n      var viewRect = event.target.getBoundingClientRect();\n      var viewportPosition = {\n        x: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.x) + (viewRect === null || viewRect === void 0 ? void 0 : viewRect.width) / 2,\n        y: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.y) + (viewRect === null || viewRect === void 0 ? void 0 : viewRect.height) / 2\n      };\n      var relativePosition = {\n        x: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.width) / 2,\n        y: (viewRect === null || viewRect === void 0 ? void 0 : viewRect.height) / 2\n      };\n      return {\n        x: viewportPosition.x,\n        y: viewportPosition.y,\n        offsetX: relativePosition.x,\n        offsetY: relativePosition.y,\n        pointerId: 0,\n        eventType: eventType,\n        pointerType: PointerType.KEY,\n        time: event.timeStamp\n      };\n    }\n  }]);\n}(EventManager);\nexport { KeyboardEventManager as default };","map":{"version":3,"names":["EventTypes","EventManager","PointerType","KeyboardEventManager","_EventManager","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","event","cancelationKeys","indexOf","key","isPressed","dispatchEvent","CANCEL","activationKeys","DOWN","UP","_inherits","_createClass","value","eventType","target","HTMLElement","adaptedEvent","mapEvent","onPointerUp","onPointerDown","onPointerCancel","registerListeners","view","addEventListener","keyDownCallback","keyUpCallback","unregisterListeners","removeEventListener","viewRect","getBoundingClientRect","viewportPosition","x","width","y","height","relativePosition","offsetX","offsetY","pointerId","pointerType","KEY","time","timeStamp","default"],"sources":["f:\\Coding\\Code\\SKiddy V2\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\KeyboardEventManager.ts"],"sourcesContent":["import { AdaptedEvent, EventTypes } from '../interfaces';\nimport EventManager from './EventManager';\nimport { PointerType } from '../../PointerType';\n\nexport default class KeyboardEventManager extends EventManager<HTMLElement> {\n  private activationKeys = ['Enter', ' '];\n  private cancelationKeys = ['Tab'];\n  private isPressed = false;\n\n  private keyDownCallback = (event: KeyboardEvent): void => {\n    if (this.cancelationKeys.indexOf(event.key) !== -1 && this.isPressed) {\n      this.dispatchEvent(event, EventTypes.CANCEL);\n      return;\n    }\n\n    if (this.activationKeys.indexOf(event.key) === -1) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.DOWN);\n  };\n\n  private keyUpCallback = (event: KeyboardEvent): void => {\n    if (this.activationKeys.indexOf(event.key) === -1 || !this.isPressed) {\n      return;\n    }\n\n    this.dispatchEvent(event, EventTypes.UP);\n  };\n\n  private dispatchEvent(event: KeyboardEvent, eventType: EventTypes) {\n    if (!(event.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const adaptedEvent = this.mapEvent(event, eventType);\n\n    switch (eventType) {\n      case EventTypes.UP:\n        this.isPressed = false;\n        this.onPointerUp(adaptedEvent);\n        break;\n      case EventTypes.DOWN:\n        this.isPressed = true;\n        this.onPointerDown(adaptedEvent);\n        break;\n      case EventTypes.CANCEL:\n        this.isPressed = false;\n        this.onPointerCancel(adaptedEvent);\n        break;\n    }\n  }\n\n  public registerListeners(): void {\n    this.view.addEventListener('keydown', this.keyDownCallback);\n    this.view.addEventListener('keyup', this.keyUpCallback);\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('keydown', this.keyDownCallback);\n    this.view.removeEventListener('keyup', this.keyUpCallback);\n  }\n\n  protected mapEvent(\n    event: KeyboardEvent,\n    eventType: EventTypes\n  ): AdaptedEvent {\n    const viewRect = (event.target as HTMLElement).getBoundingClientRect();\n\n    const viewportPosition = {\n      x: viewRect?.x + viewRect?.width / 2,\n      y: viewRect?.y + viewRect?.height / 2,\n    };\n\n    const relativePosition = {\n      x: viewRect?.width / 2,\n      y: viewRect?.height / 2,\n    };\n\n    return {\n      x: viewportPosition.x,\n      y: viewportPosition.y,\n      offsetX: relativePosition.x,\n      offsetY: relativePosition.y,\n      pointerId: 0,\n      eventType: eventType,\n      pointerType: PointerType.KEY,\n      time: event.timeStamp,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}