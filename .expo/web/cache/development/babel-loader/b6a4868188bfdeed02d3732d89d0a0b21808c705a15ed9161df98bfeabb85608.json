{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Video } from 'expo-av';\nimport { Feather } from '@expo/vector-icons';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var VideoPlayer = function VideoPlayer(_ref) {\n  var videoUrl = _ref.videoUrl,\n    title = _ref.title,\n    subtitlesUrl = _ref.subtitlesUrl,\n    onComplete = _ref.onComplete,\n    onProgress = _ref.onProgress,\n    _ref$initialProgress = _ref.initialProgress,\n    initialProgress = _ref$initialProgress === void 0 ? 0 : _ref$initialProgress;\n  var videoRef = useRef(null);\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showControls = _useState4[0],\n    setShowControls = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFullscreen = _useState6[0],\n    setIsFullscreen = _useState6[1];\n  var _useState7 = useState(1.0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    playbackSpeed = _useState8[0],\n    setPlaybackSpeed = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    showSubtitles = _useState10[0],\n    setShowSubtitles = _useState10[1];\n  useEffect(function () {\n    if (videoRef.current) {\n      videoRef.current.setPositionAsync(initialProgress * 1000);\n    }\n  }, [initialProgress]);\n  var handlePlaybackStatusUpdate = function handlePlaybackStatusUpdate(status) {\n    setStatus(status);\n    if (status.didJustFinish && onComplete) {\n      onComplete();\n    }\n    if (status.positionMillis && status.durationMillis && onProgress) {\n      onProgress(status.positionMillis / status.durationMillis);\n    }\n  };\n  var togglePlay = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (videoRef.current) {\n        if (status.isPlaying) {\n          yield videoRef.current.pauseAsync();\n        } else {\n          yield videoRef.current.playAsync();\n        }\n      }\n    });\n    return function togglePlay() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleSeek = function () {\n    var _ref3 = _asyncToGenerator(function* (forward) {\n      if (videoRef.current && status.positionMillis) {\n        var seekAmount = 10000;\n        var newPosition = status.positionMillis + (forward ? seekAmount : -seekAmount);\n        yield videoRef.current.setPositionAsync(Math.max(0, newPosition));\n      }\n    });\n    return function handleSeek(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var toggleFullscreen = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (Platform.OS !== 'web') {\n        if (isFullscreen) {\n          yield ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n        } else {\n          yield ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n        }\n      }\n      setIsFullscreen(!isFullscreen);\n    });\n    return function toggleFullscreen() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var formatTime = function formatTime(milliseconds) {\n    var totalSeconds = Math.floor(milliseconds / 1000);\n    var minutes = Math.floor(totalSeconds / 60);\n    var seconds = totalSeconds % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return _jsxs(View, {\n    style: [styles.container, isFullscreen && styles.fullscreen],\n    children: [_jsx(Video, {\n      ref: videoRef,\n      style: styles.video,\n      source: {\n        uri: videoUrl\n      },\n      useNativeControls: Platform.OS !== 'web',\n      resizeMode: \"contain\",\n      onPlaybackStatusUpdate: handlePlaybackStatusUpdate,\n      onTouchStart: function onTouchStart() {\n        return setShowControls(!showControls);\n      }\n    }), showControls && Platform.OS === 'web' && _jsxs(View, {\n      style: styles.controls,\n      children: [_jsxs(View, {\n        style: styles.controlsRow,\n        children: [_jsx(Pressable, {\n          onPress: togglePlay,\n          style: styles.controlButton,\n          children: _jsx(Feather, {\n            name: status.isPlaying ? 'pause' : 'play',\n            size: 24,\n            color: \"white\"\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return handleSeek(false);\n          },\n          style: styles.controlButton,\n          children: _jsx(Feather, {\n            name: \"rewind\",\n            size: 24,\n            color: \"white\"\n          })\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            return handleSeek(true);\n          },\n          style: styles.controlButton,\n          children: _jsx(Feather, {\n            name: \"fast-forward\",\n            size: 24,\n            color: \"white\"\n          })\n        }), _jsxs(Text, {\n          style: styles.timeText,\n          children: [formatTime(status.positionMillis || 0), \" /\", ' ', formatTime(status.durationMillis || 0)]\n        }), _jsxs(View, {\n          style: styles.rightControls,\n          children: [_jsx(Pressable, {\n            onPress: function onPress() {\n              return setShowSubtitles(!showSubtitles);\n            },\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: \"type\",\n              size: 24,\n              color: showSubtitles ? '#7C3AED' : 'white'\n            })\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return setPlaybackSpeed(function (speed) {\n                return speed === 1 ? 1.5 : 1;\n              });\n            },\n            style: styles.controlButton,\n            children: _jsxs(Text, {\n              style: styles.speedText,\n              children: [playbackSpeed, \"x\"]\n            })\n          }), _jsx(Pressable, {\n            onPress: toggleFullscreen,\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: isFullscreen ? 'minimize' : 'maximize',\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.progressBar,\n        children: _jsx(View, {\n          style: [styles.progressFill, {\n            width: `${status.positionMillis / status.durationMillis * 100 || 0}%`\n          }]\n        })\n      })]\n    }), _jsx(Text, {\n      style: styles.title,\n      children: title\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    borderRadius: 8,\n    overflow: 'hidden'\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999\n  },\n  video: {\n    width: '100%',\n    aspectRatio: 16 / 9\n  },\n  controls: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: 16\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  controlButton: {\n    marginRight: 16\n  },\n  rightControls: {\n    flexDirection: 'row',\n    marginLeft: 'auto'\n  },\n  timeText: {\n    color: 'white',\n    fontSize: 14\n  },\n  speedText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 2\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#7C3AED',\n    borderRadius: 2\n  },\n  title: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    padding: 16,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","Pressable","Platform","Video","Feather","ScreenOrientation","jsx","_jsx","jsxs","_jsxs","VideoPlayer","_ref","videoUrl","title","subtitlesUrl","onComplete","onProgress","_ref$initialProgress","initialProgress","videoRef","_useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","showControls","setShowControls","_useState5","_useState6","isFullscreen","setIsFullscreen","_useState7","_useState8","playbackSpeed","setPlaybackSpeed","_useState9","_useState10","showSubtitles","setShowSubtitles","current","setPositionAsync","handlePlaybackStatusUpdate","didJustFinish","positionMillis","durationMillis","togglePlay","_ref2","_asyncToGenerator","isPlaying","pauseAsync","playAsync","apply","arguments","handleSeek","_ref3","forward","seekAmount","newPosition","Math","max","_x","toggleFullscreen","_ref4","OS","lockAsync","OrientationLock","PORTRAIT","LANDSCAPE","formatTime","milliseconds","totalSeconds","floor","minutes","seconds","toString","padStart","style","styles","container","fullscreen","children","ref","video","source","uri","useNativeControls","resizeMode","onPlaybackStatusUpdate","onTouchStart","controls","controlsRow","onPress","controlButton","name","size","color","timeText","rightControls","speed","speedText","progressBar","progressFill","width","create","backgroundColor","borderRadius","overflow","position","top","left","right","bottom","zIndex","aspectRatio","padding","flexDirection","alignItems","marginBottom","marginRight","marginLeft","fontSize","fontWeight","height"],"sources":["d:/Code/SKiddy V2/src/components/video/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform } from 'react-native';\nimport { Video } from 'expo-av';\nimport { Feather } from '@expo/vector-icons';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\ninterface VideoPlayerProps {\n  videoUrl: string;\n  title: string;\n  subtitlesUrl?: string;\n  onComplete?: () => void;\n  onProgress?: (progress: number) => void;\n  initialProgress?: number;\n}\n\nexport const VideoPlayer = ({\n  videoUrl,\n  title,\n  subtitlesUrl,\n  onComplete,\n  onProgress,\n  initialProgress = 0,\n}: VideoPlayerProps) => {\n  const videoRef = useRef<Video>(null);\n  const [status, setStatus] = useState<any>({});\n  const [showControls, setShowControls] = useState(true);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1.0);\n  const [showSubtitles, setShowSubtitles] = useState(false);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.setPositionAsync(initialProgress * 1000); // Convert to milliseconds\n    }\n  }, [initialProgress]);\n\n  const handlePlaybackStatusUpdate = (status: any) => {\n    setStatus(status);\n    if (status.didJustFinish && onComplete) {\n      onComplete();\n    }\n    if (status.positionMillis && status.durationMillis && onProgress) {\n      onProgress(status.positionMillis / status.durationMillis);\n    }\n  };\n\n  const togglePlay = async () => {\n    if (videoRef.current) {\n      if (status.isPlaying) {\n        await videoRef.current.pauseAsync();\n      } else {\n        await videoRef.current.playAsync();\n      }\n    }\n  };\n\n  const handleSeek = async (forward: boolean) => {\n    if (videoRef.current && status.positionMillis) {\n      const seekAmount = 10000; // 10 seconds\n      const newPosition = status.positionMillis + (forward ? seekAmount : -seekAmount);\n      await videoRef.current.setPositionAsync(Math.max(0, newPosition));\n    }\n  };\n\n  const toggleFullscreen = async () => {\n    if (Platform.OS !== 'web') {\n      if (isFullscreen) {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n      } else {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n      }\n    }\n    setIsFullscreen(!isFullscreen);\n  };\n\n  const formatTime = (milliseconds: number) => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <View style={[styles.container, isFullscreen && styles.fullscreen]}>\n      <Video\n        ref={videoRef}\n        style={styles.video}\n        source={{ uri: videoUrl }}\n        useNativeControls={Platform.OS !== 'web'}\n        resizeMode=\"contain\"\n        onPlaybackStatusUpdate={handlePlaybackStatusUpdate}\n        onTouchStart={() => setShowControls(!showControls)}\n      />\n\n      {showControls && Platform.OS === 'web' && (\n        <View style={styles.controls}>\n          <View style={styles.controlsRow}>\n            <Pressable onPress={togglePlay} style={styles.controlButton}>\n              <Feather\n                name={status.isPlaying ? 'pause' : 'play'}\n                size={24}\n                color=\"white\"\n              />\n            </Pressable>\n\n            <Pressable onPress={() => handleSeek(false)} style={styles.controlButton}>\n              <Feather name=\"rewind\" size={24} color=\"white\" />\n            </Pressable>\n\n            <Pressable onPress={() => handleSeek(true)} style={styles.controlButton}>\n              <Feather name=\"fast-forward\" size={24} color=\"white\" />\n            </Pressable>\n\n            <Text style={styles.timeText}>\n              {formatTime(status.positionMillis || 0)} /{' '}\n              {formatTime(status.durationMillis || 0)}\n            </Text>\n\n            <View style={styles.rightControls}>\n              <Pressable\n                onPress={() => setShowSubtitles(!showSubtitles)}\n                style={styles.controlButton}\n              >\n                <Feather\n                  name=\"type\"\n                  size={24}\n                  color={showSubtitles ? '#7C3AED' : 'white'}\n                />\n              </Pressable>\n\n              <Pressable\n                onPress={() => setPlaybackSpeed(speed => (speed === 1 ? 1.5 : 1))}\n                style={styles.controlButton}\n              >\n                <Text style={styles.speedText}>{playbackSpeed}x</Text>\n              </Pressable>\n\n              <Pressable onPress={toggleFullscreen} style={styles.controlButton}>\n                <Feather\n                  name={isFullscreen ? 'minimize' : 'maximize'}\n                  size={24}\n                  color=\"white\"\n                />\n              </Pressable>\n            </View>\n          </View>\n\n          <View style={styles.progressBar}>\n            <View\n              style={[\n                styles.progressFill,\n                {\n                  width: `${\n                    (status.positionMillis / status.durationMillis) * 100 || 0\n                  }%`,\n                },\n              ]}\n            />\n          </View>\n        </View>\n      )}\n\n      <Text style={styles.title}>{title}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    borderRadius: 8,\n    overflow: 'hidden',\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999,\n  },\n  video: {\n    width: '100%',\n    aspectRatio: 16 / 9,\n  },\n  controls: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    padding: 16,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  controlButton: {\n    marginRight: 16,\n  },\n  rightControls: {\n    flexDirection: 'row',\n    marginLeft: 'auto',\n  },\n  timeText: {\n    color: 'white',\n    fontSize: 14,\n  },\n  speedText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 2,\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#7C3AED',\n    borderRadius: 2,\n  },\n  title: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n    padding: 16,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}