{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({\n  isAuthenticated: false,\n  user: null,\n  login: function () {\n    var _login = _asyncToGenerator(function* () {});\n    function login() {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator(function* () {});\n    function logout() {\n      return _logout.apply(this, arguments);\n    }\n    return logout;\n  }()\n});\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      try {\n        var mockUser = {\n          id: '1',\n          email: email,\n          name: 'John Doe',\n          avatar: 'JD'\n        };\n        setUser(mockUser);\n        setIsAuthenticated(true);\n      } catch (error) {\n        throw new Error('Login failed');\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      yield new Promise(function (resolve) {\n        return setTimeout(resolve, 500);\n      });\n      setUser(null);\n      setIsAuthenticated(false);\n    });\n    return function logout() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      user: user,\n      login: login,\n      logout: logout\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AuthContext","isAuthenticated","user","login","_login","_asyncToGenerator","apply","arguments","logout","_logout","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","setIsAuthenticated","_useState3","_useState4","setUser","_ref2","email","password","mockUser","id","name","avatar","error","Error","_x","_x2","_ref3","Promise","resolve","setTimeout","Provider","value","useAuth","context","undefined"],"sources":["f:/Coding/Code/SKiddy V2/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n}\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  isAuthenticated: false,\n  user: null,\n  login: async () => {},\n  logout: async () => {},\n});\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n\n  const login = async (email: string, password: string) => {\n    try {\n      // TODO: Implement actual authentication logic here\n      // For now, just simulate a successful login\n      const mockUser = {\n        id: '1',\n        email,\n        name: 'John Doe',\n        avatar: 'JD',\n      };\n      \n      setUser(mockUser);\n      setIsAuthenticated(true);\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = async () => {\n    // TODO: Replace with actual API call\n    await new Promise(resolve => setTimeout(resolve, 500)); // Simulate API call\n\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAenE,IAAMC,WAAW,GAAGL,aAAa,CAAkB;EACjDM,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,IAAI;EACVC,KAAK;IAAA,IAAAC,MAAA,GAAAC,iBAAA,CAAE,aAAY,CAAC,CAAC;IAAA,SAArBF,KAAKA,CAAA;MAAA,OAAAC,MAAA,CAAAE,KAAA,OAAAC,SAAA;IAAA;IAAA,OAALJ,KAAK;EAAA,GAAgB;EACrBK,MAAM;IAAA,IAAAC,OAAA,GAAAJ,iBAAA,CAAE,aAAY,CAAC,CAAC;IAAA,SAAtBG,MAAMA,CAAA;MAAA,OAAAC,OAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;IAAA,OAANC,MAAM;EAAA;AACR,CAAC,CAAC;AAEF,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAA8CjB,QAAQ,CAAC,KAAK,CAAC;IAAAkB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDZ,eAAe,GAAAa,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAC1C,IAAAG,UAAA,GAAwBrB,QAAQ,CAAc,IAAI,CAAC;IAAAsB,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAA5Cf,IAAI,GAAAgB,UAAA;IAAEC,OAAO,GAAAD,UAAA;EAEpB,IAAMf,KAAK;IAAA,IAAAiB,KAAA,GAAAf,iBAAA,CAAG,WAAOgB,KAAa,EAAEC,QAAgB,EAAK;MACvD,IAAI;QAGF,IAAMC,QAAQ,GAAG;UACfC,EAAE,EAAE,GAAG;UACPH,KAAK,EAALA,KAAK;UACLI,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAE;QACV,CAAC;QAEDP,OAAO,CAACI,QAAQ,CAAC;QACjBP,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOW,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;IACF,CAAC;IAAA,gBAhBKzB,KAAKA,CAAA0B,EAAA,EAAAC,GAAA;MAAA,OAAAV,KAAA,CAAAd,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgBV;EAED,IAAMC,MAAM;IAAA,IAAAuB,KAAA,GAAA1B,iBAAA,CAAG,aAAY;MAEzB,MAAM,IAAI2B,OAAO,CAAC,UAAAC,OAAO;QAAA,OAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC;MAAA,EAAC;MAEtDd,OAAO,CAAC,IAAI,CAAC;MACbH,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC;IAAA,gBANKR,MAAMA,CAAA;MAAA,OAAAuB,KAAA,CAAAzB,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMX;EAED,OACER,IAAA,CAACC,WAAW,CAACmC,QAAQ;IAACC,KAAK,EAAE;MAAEnC,eAAe,EAAfA,eAAe;MAAEC,IAAI,EAAJA,IAAI;MAAEC,KAAK,EAALA,KAAK;MAAEK,MAAM,EAANA;IAAO,CAAE;IAAAI,QAAA,EACnEA;EAAQ,CACW,CAAC;AAE3B,CAAC;AAED,OAAO,IAAMyB,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,IAAMC,OAAO,GAAGzC,UAAU,CAACG,WAAW,CAAC;EACvC,IAAIsC,OAAO,KAAKC,SAAS,EAAE;IACzB,MAAM,IAAIX,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOU,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}