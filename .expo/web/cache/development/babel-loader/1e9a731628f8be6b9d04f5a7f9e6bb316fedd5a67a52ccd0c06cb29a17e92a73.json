{"ast":null,"code":"\"use strict\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { CommonActions, getActionFromState, getPathFromState, getStateFromPath, NavigationHelpersContext } from '@react-navigation/core';\nimport * as React from 'react';\nimport { LinkingContext } from \"./LinkingContext.js\";\nvar _getRootStateForNavigate = function getRootStateForNavigate(navigation, state) {\n  var parent = navigation.getParent();\n  if (parent) {\n    var parentState = parent.getState();\n    return _getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [_objectSpread(_objectSpread({}, parentState.routes[parentState.index]), {}, {\n        state: state\n      })]\n    });\n  }\n  return state;\n};\nexport function useLinkBuilder() {\n  var navigation = React.useContext(NavigationHelpersContext);\n  var linking = React.useContext(LinkingContext);\n  var buildHref = React.useCallback(function (name, params) {\n    var options = linking.options;\n    if ((options == null ? void 0 : options.enabled) === false) {\n      return undefined;\n    }\n    var state = navigation ? _getRootStateForNavigate(navigation, {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    }) : {\n      index: 0,\n      routes: [{\n        name: name,\n        params: params\n      }]\n    };\n    var path = options != null && options.getPathFromState ? options.getPathFromState(state, options == null ? void 0 : options.config) : getPathFromState(state, options == null ? void 0 : options.config);\n    return path;\n  }, [linking, navigation]);\n  var buildAction = React.useCallback(function (href) {\n    if (!href.startsWith('/')) {\n      throw new Error(`The href must start with '/' (${href}).`);\n    }\n    var options = linking.options;\n    var state = options != null && options.getStateFromPath ? options.getStateFromPath(href, options.config) : getStateFromPath(href, options == null ? void 0 : options.config);\n    if (state) {\n      var action = getActionFromState(state, options == null ? void 0 : options.config);\n      return action != null ? action : CommonActions.reset(state);\n    } else {\n      throw new Error('Failed to parse the href to a navigation state.');\n    }\n  }, [linking]);\n  return {\n    buildHref: buildHref,\n    buildAction: buildAction\n  };\n}","map":{"version":3,"names":["CommonActions","getActionFromState","getPathFromState","getStateFromPath","NavigationHelpersContext","React","LinkingContext","getRootStateForNavigate","navigation","state","parent","getParent","parentState","getState","index","routes","_objectSpread","useLinkBuilder","useContext","linking","buildHref","useCallback","name","params","options","enabled","undefined","path","config","buildAction","href","startsWith","Error","action","reset"],"sources":["f:\\Coding\\Code\\SKiddy V2\\node_modules\\@react-navigation\\native\\src\\useLinkBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  getActionFromState,\n  getPathFromState,\n  getStateFromPath,\n  type NavigationHelpers,\n  NavigationHelpersContext,\n  type NavigationProp,\n  type ParamListBase,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport { LinkingContext } from './LinkingContext';\n\ntype NavigationObject =\n  | NavigationHelpers<ParamListBase>\n  | NavigationProp<ParamListBase>;\n\ntype MinimalState = {\n  index: number;\n  routes: { name: string; params?: object; state?: MinimalState }[];\n};\n\nconst getRootStateForNavigate = (\n  navigation: NavigationObject,\n  state: MinimalState\n): MinimalState => {\n  const parent = navigation.getParent();\n\n  if (parent) {\n    const parentState = parent.getState();\n\n    return getRootStateForNavigate(parent, {\n      index: 0,\n      routes: [\n        {\n          ...parentState.routes[parentState.index],\n          state: state,\n        },\n      ],\n    });\n  }\n\n  return state;\n};\n\n/**\n * Helpers to build href or action based on the linking options.\n * @returns `buildHref` to build an `href` for screen and `buildAction` to build an action from an `href`.\n */\nexport function useLinkBuilder() {\n  const navigation = React.useContext(NavigationHelpersContext);\n  const linking = React.useContext(LinkingContext);\n\n  const buildHref = React.useCallback(\n    (name: string, params?: object) => {\n      const { options } = linking;\n\n      if (options?.enabled === false) {\n        return undefined;\n      }\n\n      const state = navigation\n        ? getRootStateForNavigate(navigation, {\n            index: 0,\n            routes: [{ name, params }],\n          })\n        : // If we couldn't find a navigation object in context, we're at root\n          // So we'll construct a basic state object to use\n          {\n            index: 0,\n            routes: [{ name, params }],\n          };\n\n      const path = options?.getPathFromState\n        ? options.getPathFromState(state, options?.config)\n        : getPathFromState(state, options?.config);\n\n      return path;\n    },\n    [linking, navigation]\n  );\n\n  const buildAction = React.useCallback(\n    (href: string) => {\n      if (!href.startsWith('/')) {\n        throw new Error(`The href must start with '/' (${href}).`);\n      }\n\n      const { options } = linking;\n\n      const state = options?.getStateFromPath\n        ? options.getStateFromPath(href, options.config)\n        : getStateFromPath(href, options?.config);\n\n      if (state) {\n        const action = getActionFromState(state, options?.config);\n\n        return action ?? CommonActions.reset(state);\n      } else {\n        throw new Error('Failed to parse the href to a navigation state.');\n      }\n    },\n    [linking]\n  );\n\n  return {\n    buildHref,\n    buildAction,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}