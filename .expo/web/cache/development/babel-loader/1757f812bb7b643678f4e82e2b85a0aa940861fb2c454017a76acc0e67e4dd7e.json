{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from \"./src/screens/HomeScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(GestureHandlerRootView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(SafeAreaView, {\n          style: styles.container,\n          children: [_jsx(Header, {}), _jsxs(View, {\n            style: styles.content,\n            children: [_jsx(Sidebar, {}), _jsx(View, {\n              style: styles.mainContent,\n              children: _jsx(Stack.Navigator, {\n                screenOptions: {\n                  headerShown: false\n                },\n                children: _jsx(Stack.Screen, {\n                  name: \"Home\",\n                  component: HomeScreen\n                })\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F3F4F6'\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  mainContent: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","View","StyleSheet","SafeAreaProvider","SafeAreaView","GestureHandlerRootView","HomeScreen","Sidebar","Header","jsx","_jsx","jsxs","_jsxs","Stack","App","style","flex","children","styles","container","content","mainContent","Navigator","screenOptions","headerShown","Screen","name","component","create","backgroundColor","flexDirection"],"sources":["d:/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet } from 'react-native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from './src/screens/HomeScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <SafeAreaView style={styles.container}>\n            <Header />\n            <View style={styles.content}>\n              <Sidebar />\n              <View style={styles.mainContent}>\n                <Stack.Navigator\n                  screenOptions={{\n                    headerShown: false,\n                  }}\n                >\n                  <Stack.Screen name=\"Home\" component={HomeScreen} />\n                  {/* Add more screens here */}\n                </Stack.Navigator>\n              </View>\n            </View>\n          </SafeAreaView>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F3F4F6',\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  mainContent: {\n    flex: 1,\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE5E,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,gCAAgC;AAC/E,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,UAAU;AACnB,SAASC,OAAO;AAChB,SAASC,MAAM;AAAyC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,KAAK,GAAGb,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASc,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACL,sBAAsB;IAACU,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACzCP,IAAA,CAACP,gBAAgB;MAAAc,QAAA,EACfP,IAAA,CAACX,mBAAmB;QAAAkB,QAAA,EAClBL,KAAA,CAACR,YAAY;UAACW,KAAK,EAAEG,MAAM,CAACC,SAAU;UAAAF,QAAA,GACpCP,IAAA,CAACF,MAAM,IAAE,CAAC,EACVI,KAAA,CAACX,IAAI;YAACc,KAAK,EAAEG,MAAM,CAACE,OAAQ;YAAAH,QAAA,GAC1BP,IAAA,CAACH,OAAO,IAAE,CAAC,EACXG,IAAA,CAACT,IAAI;cAACc,KAAK,EAAEG,MAAM,CAACG,WAAY;cAAAJ,QAAA,EAC9BP,IAAA,CAACG,KAAK,CAACS,SAAS;gBACdC,aAAa,EAAE;kBACbC,WAAW,EAAE;gBACf,CAAE;gBAAAP,QAAA,EAEFP,IAAA,CAACG,KAAK,CAACY,MAAM;kBAACC,IAAI,EAAC,MAAM;kBAACC,SAAS,EAAErB;gBAAW,CAAE;cAAC,CAEpC;YAAC,CACd,CAAC;UAAA,CACH,CAAC;QAAA,CACK;MAAC,CACI;IAAC,CACN;EAAC,CACG,CAAC;AAE7B;AAEA,IAAMY,MAAM,GAAGhB,UAAU,CAAC0B,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTH,IAAI,EAAE,CAAC;IACPa,eAAe,EAAE;EACnB,CAAC;EACDT,OAAO,EAAE;IACPJ,IAAI,EAAE,CAAC;IACPc,aAAa,EAAE;EACjB,CAAC;EACDT,WAAW,EAAE;IACXL,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}