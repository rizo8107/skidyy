{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Video, ResizeMode } from 'expo-av';\nimport { Feather } from '@expo/vector-icons';\nimport * as ScreenOrientation from 'expo-screen-orientation';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var VideoPlayer = function VideoPlayer(_ref) {\n  var videoUrl = _ref.videoUrl,\n    drmConfig = _ref.drmConfig,\n    onComplete = _ref.onComplete,\n    onProgress = _ref.onProgress,\n    onTimeUpdate = _ref.onTimeUpdate,\n    _ref$initialProgress = _ref.initialProgress,\n    initialProgress = _ref$initialProgress === void 0 ? 0 : _ref$initialProgress,\n    _onError = _ref.onError;\n  var videoRef = useRef(null);\n  var containerRef = useRef(null);\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showControls = _useState4[0],\n    setShowControls = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isFullscreen = _useState6[0],\n    setIsFullscreen = _useState6[1];\n  var _useState7 = useState(1.0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    playbackSpeed = _useState8[0],\n    setPlaybackSpeed = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isPipActive = _useState12[0],\n    setIsPipActive = _useState12[1];\n  var controlsTimeoutRef = useRef();\n  useEffect(function () {\n    var initializeVideo = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        if (videoRef.current) {\n          try {\n            yield videoRef.current.loadAsync({\n              uri: videoUrl\n            }, {\n              progressUpdateIntervalMillis: 1000,\n              positionMillis: initialProgress * 1000,\n              shouldPlay: false,\n              volume: 1.0,\n              isMuted: false,\n              rate: playbackSpeed,\n              isLooping: false\n            }, false);\n          } catch (err) {\n            var errorMessage = `Failed to load video: ${err.message}`;\n            setError(errorMessage);\n            _onError == null ? void 0 : _onError(errorMessage);\n          }\n        }\n      });\n      return function initializeVideo() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    initializeVideo();\n    return function () {\n      if (videoRef.current) {\n        videoRef.current.unloadAsync();\n      }\n    };\n  }, [videoUrl, initialProgress, playbackSpeed]);\n  useEffect(function () {\n    var setupDRM = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        if (!drmConfig || !videoRef.current) return;\n        try {\n          var license = yield getDRMLicense();\n          var drmSettings = _objectSpread(_objectSpread({\n            headers: _objectSpread({\n              'Authorization': `Bearer ${license}`\n            }, drmConfig.headers)\n          }, drmConfig.type === 'widevine' && {\n            widevine: {\n              licenseUrl: drmConfig.licenseUrl\n            }\n          }), drmConfig.type === 'fairplay' && {\n            fairplay: {\n              licenseUrl: drmConfig.licenseUrl,\n              certificateUrl: drmConfig.certificateUrl\n            }\n          });\n          yield videoRef.current.loadAsync({\n            uri: videoUrl\n          }, {\n            drmSettings: drmSettings\n          }, false);\n        } catch (err) {\n          var errorMessage = 'Failed to initialize DRM: ' + err.message;\n          setError(errorMessage);\n          _onError == null ? void 0 : _onError(errorMessage);\n        }\n      });\n      return function setupDRM() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    setupDRM();\n  }, [drmConfig, videoUrl]);\n  useEffect(function () {\n    if (videoRef.current) {\n      videoRef.current.setPositionAsync(initialProgress * 1000);\n    }\n  }, [initialProgress]);\n  useEffect(function () {\n    return function () {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    var handleFullscreenChange = function handleFullscreenChange() {\n      if (!document.fullscreenElement && isFullscreen) {\n        setIsFullscreen(false);\n      }\n    };\n    if (Platform.OS === 'web') {\n      document.addEventListener('fullscreenchange', handleFullscreenChange);\n      return function () {\n        document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      };\n    }\n  }, [isFullscreen]);\n  var handlePlaybackStatusUpdate = function handlePlaybackStatusUpdate(status) {\n    setStatus(status);\n    if (status.error) {\n      var errorMessage = `Playback error: ${status.error}`;\n      setError(errorMessage);\n      _onError == null ? void 0 : _onError(errorMessage);\n      return;\n    }\n    if (status.didJustFinish && onComplete) {\n      onComplete();\n    }\n    if (status.positionMillis && status.durationMillis && onProgress) {\n      onProgress(status.positionMillis / status.durationMillis);\n    }\n    if (status.positionMillis && onTimeUpdate) {\n      onTimeUpdate(status.positionMillis / 1000);\n    }\n  };\n  var togglePlay = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (videoRef.current) {\n        if (status.isPlaying) {\n          yield videoRef.current.pauseAsync();\n        } else {\n          yield videoRef.current.playAsync();\n        }\n      }\n    });\n    return function togglePlay() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleSeek = function () {\n    var _ref5 = _asyncToGenerator(function* (forward) {\n      if (videoRef.current && status.positionMillis) {\n        var seekAmount = 10000;\n        var newPosition = status.positionMillis + (forward ? seekAmount : -seekAmount);\n        yield videoRef.current.setPositionAsync(Math.max(0, newPosition));\n      }\n    });\n    return function handleSeek(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var toggleFullscreen = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (Platform.OS === 'web') {\n        if (!isFullscreen) {\n          try {\n            if (containerRef.current) {\n              var element = containerRef.current;\n              if (element.requestFullscreen) {\n                yield element.requestFullscreen();\n              } else if (element.webkitRequestFullscreen) {\n                yield element.webkitRequestFullscreen();\n              } else if (element.msRequestFullscreen) {\n                yield element.msRequestFullscreen();\n              }\n            }\n          } catch (error) {\n            console.error('Error attempting to enable fullscreen:', error);\n          }\n        } else {\n          try {\n            if (document.exitFullscreen) {\n              yield document.exitFullscreen();\n            } else if (document.webkitExitFullscreen) {\n              yield document.webkitExitFullscreen();\n            } else if (document.msExitFullscreen) {\n              yield document.msExitFullscreen();\n            }\n          } catch (error) {\n            console.error('Error attempting to exit fullscreen:', error);\n          }\n        }\n      } else {\n        if (isFullscreen) {\n          yield ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n        } else {\n          yield ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n        }\n      }\n      setIsFullscreen(!isFullscreen);\n    });\n    return function toggleFullscreen() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var togglePictureInPicture = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      if (Platform.OS === 'web' && document.pictureInPictureEnabled) {\n        try {\n          if (!isPipActive) {\n            var _videoRef$current, _videoRef$current$web;\n            yield (_videoRef$current = videoRef.current) == null ? void 0 : (_videoRef$current$web = _videoRef$current.webVideoRef) == null ? void 0 : _videoRef$current$web.requestPictureInPicture();\n            setIsPipActive(true);\n          } else {\n            yield document.exitPictureInPicture();\n            setIsPipActive(false);\n          }\n        } catch (err) {\n          var errorMessage = 'Picture-in-Picture failed: ' + err.message;\n          setError(errorMessage);\n          _onError == null ? void 0 : _onError(errorMessage);\n        }\n      }\n    });\n    return function togglePictureInPicture() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var changePlaybackSpeed = function changePlaybackSpeed() {\n    var speeds = [0.5, 1.0, 1.5, 2.0];\n    var currentIndex = speeds.indexOf(playbackSpeed);\n    var nextIndex = (currentIndex + 1) % speeds.length;\n    var newSpeed = speeds[nextIndex];\n    setPlaybackSpeed(newSpeed);\n    if (videoRef.current) {\n      videoRef.current.setRateAsync(newSpeed, true);\n    }\n  };\n  var formatTime = function formatTime(milliseconds) {\n    var totalSeconds = Math.floor(milliseconds / 1000);\n    var minutes = Math.floor(totalSeconds / 60);\n    var seconds = totalSeconds % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  var handleControlsShow = function handleControlsShow() {\n    setShowControls(true);\n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    if (status.isPlaying) {\n      controlsTimeoutRef.current = setTimeout(function () {\n        setShowControls(false);\n      }, 3000);\n    }\n  };\n  var handleProgressBarPress = function handleProgressBarPress(event) {\n    if (videoRef.current && status.durationMillis) {\n      var progressBarWidth = event.currentTarget.offsetWidth;\n      var clickPosition = event.nativeEvent.offsetX;\n      var percentage = clickPosition / progressBarWidth;\n      var newPosition = status.durationMillis * percentage;\n      videoRef.current.setPositionAsync(newPosition);\n    }\n  };\n  return _jsx(View, {\n    ref: containerRef,\n    style: [styles.container, isFullscreen && styles.fullscreen],\n    children: error ? _jsxs(View, {\n      style: styles.errorContainer,\n      children: [_jsx(Text, {\n        style: styles.errorText,\n        children: error\n      }), _jsx(Text, {\n        style: styles.errorSubtext,\n        children: \"Unable to play the video. Please check your internet connection or try again later.\"\n      }), _jsx(Pressable, {\n        style: styles.retryButton,\n        onPress: function onPress() {\n          setError(null);\n          if (videoRef.current) {\n            videoRef.current.loadAsync({\n              uri: videoUrl\n            }, {\n              shouldPlay: false,\n              positionMillis: status.positionMillis || 0\n            }, false);\n          }\n        },\n        children: _jsx(Text, {\n          style: styles.retryButtonText,\n          children: \"Retry\"\n        })\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Video, {\n        ref: videoRef,\n        style: styles.video,\n        source: {\n          uri: videoUrl\n        },\n        resizeMode: ResizeMode.CONTAIN,\n        useNativeControls: false,\n        onPlaybackStatusUpdate: handlePlaybackStatusUpdate,\n        onError: function onError(error) {\n          var errorMessage = `Video playback error: ${error}`;\n          setError(errorMessage);\n          _onError == null ? void 0 : _onError(errorMessage);\n        }\n      }), showControls && _jsxs(View, {\n        style: styles.controls,\n        children: [_jsxs(View, {\n          style: styles.controlsRow,\n          children: [_jsx(Pressable, {\n            onPress: togglePlay,\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: status.isPlaying ? 'pause' : 'play',\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return handleSeek(false);\n            },\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: \"rewind\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return handleSeek(true);\n            },\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: \"fast-forward\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            onPress: changePlaybackSpeed,\n            style: styles.controlButton,\n            children: _jsxs(Text, {\n              style: styles.speedText,\n              children: [playbackSpeed, \"x\"]\n            })\n          }), Platform.OS === 'web' && _jsx(Pressable, {\n            onPress: togglePictureInPicture,\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: \"minimize-2\",\n              size: 24,\n              color: \"white\"\n            })\n          }), _jsx(Pressable, {\n            onPress: toggleFullscreen,\n            style: styles.controlButton,\n            children: _jsx(Feather, {\n              name: isFullscreen ? 'minimize' : 'maximize',\n              size: 24,\n              color: \"white\"\n            })\n          })]\n        }), _jsx(Pressable, {\n          style: styles.progressBarContainer,\n          onPress: handleProgressBarPress,\n          children: _jsx(View, {\n            style: styles.progressBar,\n            children: _jsx(View, {\n              style: [styles.progressFill, {\n                width: `${status.positionMillis / status.durationMillis * 100 || 0}%`\n              }]\n            })\n          })\n        }), _jsx(View, {\n          style: styles.timeTextContainer,\n          children: _jsxs(Text, {\n            style: styles.timeText,\n            children: [formatTime(status.positionMillis || 0), \" /\", ' ', formatTime(status.durationMillis || 0)]\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    position: 'relative',\n    width: '100%'\n  },\n  fullscreen: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 9999,\n    backgroundColor: '#000',\n    borderRadius: 0\n  },\n  video: {\n    width: '100%',\n    aspectRatio: 16 / 9\n  },\n  fullscreenVideo: {\n    width: '100%',\n    height: '100%',\n    aspectRatio: undefined\n  },\n  controls: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    padding: 16\n  },\n  fullscreenControls: {\n    padding: 24\n  },\n  progressBarContainer: {\n    width: '100%',\n    height: 20,\n    justifyContent: 'center',\n    cursor: 'pointer'\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 2\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#7C3AED',\n    borderRadius: 2\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 8\n  },\n  leftControls: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  rightControls: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  controlButton: {\n    marginRight: 16,\n    padding: 8,\n    borderRadius: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)'\n  },\n  timeTextContainer: {\n    marginTop: 8\n  },\n  timeText: {\n    color: 'white',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  speedText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  errorText: {\n    color: '#ff4444',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 8\n  },\n  errorSubtext: {\n    color: '#999',\n    fontSize: 14,\n    textAlign: 'center'\n  },\n  retryButton: {\n    marginTop: 16,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: '#007AFF',\n    borderRadius: 8\n  },\n  retryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","Pressable","Platform","Video","ResizeMode","Feather","ScreenOrientation","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","VideoPlayer","_ref","videoUrl","drmConfig","onComplete","onProgress","onTimeUpdate","_ref$initialProgress","initialProgress","onError","videoRef","containerRef","_useState","_useState2","_slicedToArray","status","setStatus","_useState3","_useState4","showControls","setShowControls","_useState5","_useState6","isFullscreen","setIsFullscreen","_useState7","_useState8","playbackSpeed","setPlaybackSpeed","_useState9","_useState10","error","setError","_useState11","_useState12","isPipActive","setIsPipActive","controlsTimeoutRef","initializeVideo","_ref2","_asyncToGenerator","current","loadAsync","uri","progressUpdateIntervalMillis","positionMillis","shouldPlay","volume","isMuted","rate","isLooping","err","errorMessage","message","apply","arguments","unloadAsync","setupDRM","_ref3","license","getDRMLicense","drmSettings","_objectSpread","headers","type","widevine","licenseUrl","fairplay","certificateUrl","setPositionAsync","clearTimeout","handleFullscreenChange","document","fullscreenElement","OS","addEventListener","removeEventListener","handlePlaybackStatusUpdate","didJustFinish","durationMillis","togglePlay","_ref4","isPlaying","pauseAsync","playAsync","handleSeek","_ref5","forward","seekAmount","newPosition","Math","max","_x","toggleFullscreen","_ref6","element","requestFullscreen","webkitRequestFullscreen","msRequestFullscreen","console","exitFullscreen","webkitExitFullscreen","msExitFullscreen","lockAsync","OrientationLock","PORTRAIT","LANDSCAPE","togglePictureInPicture","_ref7","pictureInPictureEnabled","_videoRef$current","_videoRef$current$web","webVideoRef","requestPictureInPicture","exitPictureInPicture","changePlaybackSpeed","speeds","currentIndex","indexOf","nextIndex","length","newSpeed","setRateAsync","formatTime","milliseconds","totalSeconds","floor","minutes","seconds","toString","padStart","handleControlsShow","setTimeout","handleProgressBarPress","event","progressBarWidth","currentTarget","offsetWidth","clickPosition","nativeEvent","offsetX","percentage","ref","style","styles","container","fullscreen","children","errorContainer","errorText","errorSubtext","retryButton","onPress","retryButtonText","video","source","resizeMode","CONTAIN","useNativeControls","onPlaybackStatusUpdate","controls","controlsRow","controlButton","name","size","color","speedText","progressBarContainer","progressBar","progressFill","width","timeTextContainer","timeText","create","backgroundColor","borderRadius","overflow","position","top","left","right","bottom","zIndex","aspectRatio","fullscreenVideo","height","undefined","padding","fullscreenControls","justifyContent","cursor","flexDirection","alignItems","marginTop","leftControls","rightControls","marginRight","fontSize","textAlign","fontWeight","flex","marginBottom","paddingHorizontal","paddingVertical"],"sources":["d:/Code/SKiddy V2/src/components/video/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { View, Text, StyleSheet, Pressable, Platform } from 'react-native';\nimport { Video, ResizeMode } from 'expo-av';\nimport { Feather } from '@expo/vector-icons';\nimport * as ScreenOrientation from 'expo-screen-orientation';\n\ninterface VideoPlayerProps {\n  videoUrl: string;\n  drmConfig?: {\n    type: 'widevine' | 'fairplay' | 'playready';\n    licenseUrl: string;\n    certificateUrl?: string;\n    headers?: Record<string, string>;\n  };\n  onComplete?: () => void;\n  onProgress?: (progress: number) => void;\n  onTimeUpdate?: (time: number) => void;\n  initialProgress?: number;\n  onError?: (error: string) => void;\n}\n\nexport const VideoPlayer = ({\n  videoUrl,\n  drmConfig,\n  onComplete,\n  onProgress,\n  onTimeUpdate,\n  initialProgress = 0,\n  onError,\n}: VideoPlayerProps) => {\n  const videoRef = useRef<Video>(null);\n  const containerRef = useRef<View>(null);\n  const [status, setStatus] = useState<any>({});\n  const [showControls, setShowControls] = useState(true);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [playbackSpeed, setPlaybackSpeed] = useState(1.0);\n  const [error, setError] = useState<string | null>(null);\n  const [isPipActive, setIsPipActive] = useState(false);\n  const controlsTimeoutRef = useRef<NodeJS.Timeout>();\n\n  useEffect(() => {\n    const initializeVideo = async () => {\n      if (videoRef.current) {\n        try {\n          await videoRef.current.loadAsync(\n            { uri: videoUrl },\n            {\n              progressUpdateIntervalMillis: 1000,\n              positionMillis: initialProgress * 1000,\n              shouldPlay: false,\n              volume: 1.0,\n              isMuted: false,\n              rate: playbackSpeed,\n              isLooping: false,\n            },\n            false\n          );\n        } catch (err: any) {\n          const errorMessage = `Failed to load video: ${err.message}`;\n          setError(errorMessage);\n          onError?.(errorMessage);\n        }\n      }\n    };\n\n    initializeVideo();\n    return () => {\n      if (videoRef.current) {\n        videoRef.current.unloadAsync();\n      }\n    };\n  }, [videoUrl, initialProgress, playbackSpeed]);\n\n  useEffect(() => {\n    const setupDRM = async () => {\n      if (!drmConfig || !videoRef.current) return;\n\n      try {\n        const license = await getDRMLicense();\n        const drmSettings = {\n          headers: {\n            'Authorization': `Bearer ${license}`,\n            ...drmConfig.headers,\n          },\n          ...(drmConfig.type === 'widevine' && {\n            widevine: {\n              licenseUrl: drmConfig.licenseUrl,\n            },\n          }),\n          ...(drmConfig.type === 'fairplay' && {\n            fairplay: {\n              licenseUrl: drmConfig.licenseUrl,\n              certificateUrl: drmConfig.certificateUrl,\n            },\n          }),\n        };\n\n        await videoRef.current.loadAsync(\n          { uri: videoUrl },\n          { drmSettings },\n          false\n        );\n      } catch (err: any) {\n        const errorMessage = 'Failed to initialize DRM: ' + err.message;\n        setError(errorMessage);\n        onError?.(errorMessage);\n      }\n    };\n\n    setupDRM();\n  }, [drmConfig, videoUrl]);\n\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.setPositionAsync(initialProgress * 1000);\n    }\n  }, [initialProgress]);\n\n  useEffect(() => {\n    return () => {\n      if (controlsTimeoutRef.current) {\n        clearTimeout(controlsTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const handleFullscreenChange = () => {\n      if (!document.fullscreenElement && isFullscreen) {\n        setIsFullscreen(false);\n      }\n    };\n\n    if (Platform.OS === 'web') {\n      document.addEventListener('fullscreenchange', handleFullscreenChange);\n      return () => {\n        document.removeEventListener('fullscreenchange', handleFullscreenChange);\n      };\n    }\n  }, [isFullscreen]);\n\n  const handlePlaybackStatusUpdate = (status: any) => {\n    setStatus(status);\n    if (status.error) {\n      const errorMessage = `Playback error: ${status.error}`;\n      setError(errorMessage);\n      onError?.(errorMessage);\n      return;\n    }\n\n    if (status.didJustFinish && onComplete) {\n      onComplete();\n    }\n    if (status.positionMillis && status.durationMillis && onProgress) {\n      onProgress(status.positionMillis / status.durationMillis);\n    }\n    if (status.positionMillis && onTimeUpdate) {\n      onTimeUpdate(status.positionMillis / 1000);\n    }\n  };\n\n  const togglePlay = async () => {\n    if (videoRef.current) {\n      if (status.isPlaying) {\n        await videoRef.current.pauseAsync();\n      } else {\n        await videoRef.current.playAsync();\n      }\n    }\n  };\n\n  const handleSeek = async (forward: boolean) => {\n    if (videoRef.current && status.positionMillis) {\n      const seekAmount = 10000;\n      const newPosition = status.positionMillis + (forward ? seekAmount : -seekAmount);\n      await videoRef.current.setPositionAsync(Math.max(0, newPosition));\n    }\n  };\n\n  const toggleFullscreen = async () => {\n    if (Platform.OS === 'web') {\n      if (!isFullscreen) {\n        try {\n          if (containerRef.current) {\n            const element = containerRef.current as any;\n            if (element.requestFullscreen) {\n              await element.requestFullscreen();\n            } else if (element.webkitRequestFullscreen) {\n              await element.webkitRequestFullscreen();\n            } else if (element.msRequestFullscreen) {\n              await element.msRequestFullscreen();\n            }\n          }\n        } catch (error) {\n          console.error('Error attempting to enable fullscreen:', error);\n        }\n      } else {\n        try {\n          if (document.exitFullscreen) {\n            await document.exitFullscreen();\n          } else if ((document as any).webkitExitFullscreen) {\n            await (document as any).webkitExitFullscreen();\n          } else if ((document as any).msExitFullscreen) {\n            await (document as any).msExitFullscreen();\n          }\n        } catch (error) {\n          console.error('Error attempting to exit fullscreen:', error);\n        }\n      }\n    } else {\n      if (isFullscreen) {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.PORTRAIT);\n      } else {\n        await ScreenOrientation.lockAsync(ScreenOrientation.OrientationLock.LANDSCAPE);\n      }\n    }\n    setIsFullscreen(!isFullscreen);\n  };\n\n  const togglePictureInPicture = async () => {\n    if (Platform.OS === 'web' && document.pictureInPictureEnabled) {\n      try {\n        if (!isPipActive) {\n          await (videoRef.current as any)?.webVideoRef?.requestPictureInPicture();\n          setIsPipActive(true);\n        } else {\n          await document.exitPictureInPicture();\n          setIsPipActive(false);\n        }\n      } catch (err: any) {\n        const errorMessage = 'Picture-in-Picture failed: ' + err.message;\n        setError(errorMessage);\n        onError?.(errorMessage);\n      }\n    }\n  };\n\n  const changePlaybackSpeed = () => {\n    const speeds = [0.5, 1.0, 1.5, 2.0];\n    const currentIndex = speeds.indexOf(playbackSpeed);\n    const nextIndex = (currentIndex + 1) % speeds.length;\n    const newSpeed = speeds[nextIndex];\n    setPlaybackSpeed(newSpeed);\n    if (videoRef.current) {\n      videoRef.current.setRateAsync(newSpeed, true);\n    }\n  };\n\n  const formatTime = (milliseconds: number) => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const handleControlsShow = () => {\n    setShowControls(true);\n    if (controlsTimeoutRef.current) {\n      clearTimeout(controlsTimeoutRef.current);\n    }\n    if (status.isPlaying) {\n      controlsTimeoutRef.current = setTimeout(() => {\n        setShowControls(false);\n      }, 3000);\n    }\n  };\n\n  const handleProgressBarPress = (event: any) => {\n    if (videoRef.current && status.durationMillis) {\n      const progressBarWidth = event.currentTarget.offsetWidth;\n      const clickPosition = event.nativeEvent.offsetX;\n      const percentage = clickPosition / progressBarWidth;\n      const newPosition = status.durationMillis * percentage;\n      videoRef.current.setPositionAsync(newPosition);\n    }\n  };\n\n  return (\n    <View ref={containerRef} style={[styles.container, isFullscreen && styles.fullscreen]}>\n      {error ? (\n        <View style={styles.errorContainer}>\n          <Text style={styles.errorText}>{error}</Text>\n          <Text style={styles.errorSubtext}>\n            Unable to play the video. Please check your internet connection or try again later.\n          </Text>\n          <Pressable\n            style={styles.retryButton}\n            onPress={() => {\n              setError(null);\n              if (videoRef.current) {\n                videoRef.current.loadAsync(\n                  { uri: videoUrl },\n                  {\n                    shouldPlay: false,\n                    positionMillis: status.positionMillis || 0,\n                  },\n                  false\n                );\n              }\n            }}\n          >\n            <Text style={styles.retryButtonText}>Retry</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          <Video\n            ref={videoRef}\n            style={styles.video}\n            source={{ uri: videoUrl }}\n            resizeMode={ResizeMode.CONTAIN}\n            useNativeControls={false}\n            onPlaybackStatusUpdate={handlePlaybackStatusUpdate}\n            onError={(error) => {\n              const errorMessage = `Video playback error: ${error}`;\n              setError(errorMessage);\n              onError?.(errorMessage);\n            }}\n          />\n          {showControls && (\n            <View style={styles.controls}>\n              <View style={styles.controlsRow}>\n                <Pressable onPress={togglePlay} style={styles.controlButton}>\n                  <Feather name={status.isPlaying ? 'pause' : 'play'} size={24} color=\"white\" />\n                </Pressable>\n                <Pressable onPress={() => handleSeek(false)} style={styles.controlButton}>\n                  <Feather name=\"rewind\" size={24} color=\"white\" />\n                </Pressable>\n                <Pressable onPress={() => handleSeek(true)} style={styles.controlButton}>\n                  <Feather name=\"fast-forward\" size={24} color=\"white\" />\n                </Pressable>\n                <Pressable onPress={changePlaybackSpeed} style={styles.controlButton}>\n                  <Text style={styles.speedText}>{playbackSpeed}x</Text>\n                </Pressable>\n                {Platform.OS === 'web' && (\n                  <Pressable onPress={togglePictureInPicture} style={styles.controlButton}>\n                    <Feather name=\"minimize-2\" size={24} color=\"white\" />\n                  </Pressable>\n                )}\n                <Pressable onPress={toggleFullscreen} style={styles.controlButton}>\n                  <Feather name={isFullscreen ? 'minimize' : 'maximize'} size={24} color=\"white\" />\n                </Pressable>\n              </View>\n              <Pressable style={styles.progressBarContainer} onPress={handleProgressBarPress}>\n                <View style={styles.progressBar}>\n                  <View\n                    style={[\n                      styles.progressFill,\n                      {\n                        width: `${\n                          (status.positionMillis / status.durationMillis) * 100 || 0\n                        }%`,\n                      },\n                    ]}\n                  />\n                </View>\n              </Pressable>\n              <View style={styles.timeTextContainer}>\n                <Text style={styles.timeText}>\n                  {formatTime(status.positionMillis || 0)} /{' '}\n                  {formatTime(status.durationMillis || 0)}\n                </Text>\n              </View>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    position: 'relative',\n    width: '100%',\n  },\n  fullscreen: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 9999,\n    backgroundColor: '#000',\n    borderRadius: 0,\n  },\n  video: {\n    width: '100%',\n    aspectRatio: 16 / 9,\n  },\n  fullscreenVideo: {\n    width: '100%',\n    height: '100%',\n    aspectRatio: undefined,\n  },\n  controls: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    padding: 16,\n  },\n  fullscreenControls: {\n    padding: 24,\n  },\n  progressBarContainer: {\n    width: '100%',\n    height: 20,\n    justifyContent: 'center',\n    cursor: 'pointer',\n  },\n  progressBar: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.2)',\n    borderRadius: 2,\n  },\n  progressFill: {\n    height: '100%',\n    backgroundColor: '#7C3AED',\n    borderRadius: 2,\n  },\n  controlsRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    marginTop: 8,\n  },\n  leftControls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  rightControls: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  controlButton: {\n    marginRight: 16,\n    padding: 8,\n    borderRadius: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  },\n  timeTextContainer: {\n    marginTop: 8,\n  },\n  timeText: {\n    color: 'white',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  speedText: {\n    color: 'white',\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  errorContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  errorText: {\n    color: '#ff4444',\n    fontSize: 16,\n    textAlign: 'center',\n    marginBottom: 8,\n  },\n  errorSubtext: {\n    color: '#999',\n    fontSize: 14,\n    textAlign: 'center',\n  },\n  retryButton: {\n    marginTop: 16,\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    backgroundColor: '#007AFF',\n    borderRadius: 8,\n  },\n  retryButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,QAAA;AAE3D,SAASC,KAAK,EAAEC,UAAU,QAAQ,SAAS;AAC3C,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,OAAO,KAAKC,iBAAiB,MAAM,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA,EAAAC,QAAA,IAAAC,SAAA;AAiB7D,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAQA;EAAA,IAPtBC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IACRC,SAAS,GAAAF,IAAA,CAATE,SAAS;IACTC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IACVC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,YAAY,GAAAL,IAAA,CAAZK,YAAY;IAAAC,oBAAA,GAAAN,IAAA,CACZO,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,CAAC,GAAAA,oBAAA;IACnBE,QAAO,GAAAR,IAAA,CAAPQ,OAAO;EAEP,IAAMC,QAAQ,GAAG3B,MAAM,CAAQ,IAAI,CAAC;EACpC,IAAM4B,YAAY,GAAG5B,MAAM,CAAO,IAAI,CAAC;EACvC,IAAA6B,SAAA,GAA4B9B,QAAQ,CAAM,CAAC,CAAC,CAAC;IAAA+B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EACxB,IAAAI,UAAA,GAAwCnC,QAAQ,CAAC,IAAI,CAAC;IAAAoC,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/CE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAAwCvC,QAAQ,CAAC,KAAK,CAAC;IAAAwC,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EACpC,IAAAG,UAAA,GAA0C3C,QAAQ,CAAC,GAAG,CAAC;IAAA4C,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAhDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAA0B/C,QAAQ,CAAgB,IAAI,CAAC;IAAAgD,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAAhDE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EACtB,IAAAG,WAAA,GAAsCnD,QAAQ,CAAC,KAAK,CAAC;IAAAoD,WAAA,GAAApB,cAAA,CAAAmB,WAAA;IAA9CE,WAAW,GAAAD,WAAA;IAAEE,cAAc,GAAAF,WAAA;EAClC,IAAMG,kBAAkB,GAAGtD,MAAM,CAAiB,CAAC;EAEnDC,SAAS,CAAC,YAAM;IACd,IAAMsD,eAAe;MAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;QAClC,IAAI9B,QAAQ,CAAC+B,OAAO,EAAE;UACpB,IAAI;YACF,MAAM/B,QAAQ,CAAC+B,OAAO,CAACC,SAAS,CAC9B;cAAEC,GAAG,EAAEzC;YAAS,CAAC,EACjB;cACE0C,4BAA4B,EAAE,IAAI;cAClCC,cAAc,EAAErC,eAAe,GAAG,IAAI;cACtCsC,UAAU,EAAE,KAAK;cACjBC,MAAM,EAAE,GAAG;cACXC,OAAO,EAAE,KAAK;cACdC,IAAI,EAAEtB,aAAa;cACnBuB,SAAS,EAAE;YACb,CAAC,EACD,KACF,CAAC;UACH,CAAC,CAAC,OAAOC,GAAQ,EAAE;YACjB,IAAMC,YAAY,GAAG,yBAAyBD,GAAG,CAACE,OAAO,EAAE;YAC3DrB,QAAQ,CAACoB,YAAY,CAAC;YACtB3C,QAAO,oBAAPA,QAAO,CAAG2C,YAAY,CAAC;UACzB;QACF;MACF,CAAC;MAAA,gBAtBKd,eAAeA,CAAA;QAAA,OAAAC,KAAA,CAAAe,KAAA,OAAAC,SAAA;MAAA;IAAA,GAsBpB;IAEDjB,eAAe,CAAC,CAAC;IACjB,OAAO,YAAM;MACX,IAAI5B,QAAQ,CAAC+B,OAAO,EAAE;QACpB/B,QAAQ,CAAC+B,OAAO,CAACe,WAAW,CAAC,CAAC;MAChC;IACF,CAAC;EACH,CAAC,EAAE,CAACtD,QAAQ,EAAEM,eAAe,EAAEmB,aAAa,CAAC,CAAC;EAE9C3C,SAAS,CAAC,YAAM;IACd,IAAMyE,QAAQ;MAAA,IAAAC,KAAA,GAAAlB,iBAAA,CAAG,aAAY;QAC3B,IAAI,CAACrC,SAAS,IAAI,CAACO,QAAQ,CAAC+B,OAAO,EAAE;QAErC,IAAI;UACF,IAAMkB,OAAO,SAASC,aAAa,CAAC,CAAC;UACrC,IAAMC,WAAW,GAAAC,aAAA,CAAAA,aAAA;YACfC,OAAO,EAAAD,aAAA;cACL,eAAe,EAAE,UAAUH,OAAO;YAAE,GACjCxD,SAAS,CAAC4D,OAAO;UACrB,GACG5D,SAAS,CAAC6D,IAAI,KAAK,UAAU,IAAI;YACnCC,QAAQ,EAAE;cACRC,UAAU,EAAE/D,SAAS,CAAC+D;YACxB;UACF,CAAC,GACG/D,SAAS,CAAC6D,IAAI,KAAK,UAAU,IAAI;YACnCG,QAAQ,EAAE;cACRD,UAAU,EAAE/D,SAAS,CAAC+D,UAAU;cAChCE,cAAc,EAAEjE,SAAS,CAACiE;YAC5B;UACF,CAAC,CACF;UAED,MAAM1D,QAAQ,CAAC+B,OAAO,CAACC,SAAS,CAC9B;YAAEC,GAAG,EAAEzC;UAAS,CAAC,EACjB;YAAE2D,WAAW,EAAXA;UAAY,CAAC,EACf,KACF,CAAC;QACH,CAAC,CAAC,OAAOV,GAAQ,EAAE;UACjB,IAAMC,YAAY,GAAG,4BAA4B,GAAGD,GAAG,CAACE,OAAO;UAC/DrB,QAAQ,CAACoB,YAAY,CAAC;UACtB3C,QAAO,oBAAPA,QAAO,CAAG2C,YAAY,CAAC;QACzB;MACF,CAAC;MAAA,gBAjCKK,QAAQA,CAAA;QAAA,OAAAC,KAAA,CAAAJ,KAAA,OAAAC,SAAA;MAAA;IAAA,GAiCb;IAEDE,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACtD,SAAS,EAAED,QAAQ,CAAC,CAAC;EAEzBlB,SAAS,CAAC,YAAM;IACd,IAAI0B,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAAC4B,gBAAgB,CAAC7D,eAAe,GAAG,IAAI,CAAC;IAC3D;EACF,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErBxB,SAAS,CAAC,YAAM;IACd,OAAO,YAAM;MACX,IAAIqD,kBAAkB,CAACI,OAAO,EAAE;QAC9B6B,YAAY,CAACjC,kBAAkB,CAACI,OAAO,CAAC;MAC1C;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENzD,SAAS,CAAC,YAAM;IACd,IAAMuF,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;MACnC,IAAI,CAACC,QAAQ,CAACC,iBAAiB,IAAIlD,YAAY,EAAE;QAC/CC,eAAe,CAAC,KAAK,CAAC;MACxB;IACF,CAAC;IAED,IAAInC,QAAQ,CAACqF,EAAE,KAAK,KAAK,EAAE;MACzBF,QAAQ,CAACG,gBAAgB,CAAC,kBAAkB,EAAEJ,sBAAsB,CAAC;MACrE,OAAO,YAAM;QACXC,QAAQ,CAACI,mBAAmB,CAAC,kBAAkB,EAAEL,sBAAsB,CAAC;MAC1E,CAAC;IACH;EACF,CAAC,EAAE,CAAChD,YAAY,CAAC,CAAC;EAElB,IAAMsD,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAI9D,MAAW,EAAK;IAClDC,SAAS,CAACD,MAAM,CAAC;IACjB,IAAIA,MAAM,CAACgB,KAAK,EAAE;MAChB,IAAMqB,YAAY,GAAG,mBAAmBrC,MAAM,CAACgB,KAAK,EAAE;MACtDC,QAAQ,CAACoB,YAAY,CAAC;MACtB3C,QAAO,oBAAPA,QAAO,CAAG2C,YAAY,CAAC;MACvB;IACF;IAEA,IAAIrC,MAAM,CAAC+D,aAAa,IAAI1E,UAAU,EAAE;MACtCA,UAAU,CAAC,CAAC;IACd;IACA,IAAIW,MAAM,CAAC8B,cAAc,IAAI9B,MAAM,CAACgE,cAAc,IAAI1E,UAAU,EAAE;MAChEA,UAAU,CAACU,MAAM,CAAC8B,cAAc,GAAG9B,MAAM,CAACgE,cAAc,CAAC;IAC3D;IACA,IAAIhE,MAAM,CAAC8B,cAAc,IAAIvC,YAAY,EAAE;MACzCA,YAAY,CAACS,MAAM,CAAC8B,cAAc,GAAG,IAAI,CAAC;IAC5C;EACF,CAAC;EAED,IAAMmC,UAAU;IAAA,IAAAC,KAAA,GAAAzC,iBAAA,CAAG,aAAY;MAC7B,IAAI9B,QAAQ,CAAC+B,OAAO,EAAE;QACpB,IAAI1B,MAAM,CAACmE,SAAS,EAAE;UACpB,MAAMxE,QAAQ,CAAC+B,OAAO,CAAC0C,UAAU,CAAC,CAAC;QACrC,CAAC,MAAM;UACL,MAAMzE,QAAQ,CAAC+B,OAAO,CAAC2C,SAAS,CAAC,CAAC;QACpC;MACF;IACF,CAAC;IAAA,gBARKJ,UAAUA,CAAA;MAAA,OAAAC,KAAA,CAAA3B,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQf;EAED,IAAM8B,UAAU;IAAA,IAAAC,KAAA,GAAA9C,iBAAA,CAAG,WAAO+C,OAAgB,EAAK;MAC7C,IAAI7E,QAAQ,CAAC+B,OAAO,IAAI1B,MAAM,CAAC8B,cAAc,EAAE;QAC7C,IAAM2C,UAAU,GAAG,KAAK;QACxB,IAAMC,WAAW,GAAG1E,MAAM,CAAC8B,cAAc,IAAI0C,OAAO,GAAGC,UAAU,GAAG,CAACA,UAAU,CAAC;QAChF,MAAM9E,QAAQ,CAAC+B,OAAO,CAAC4B,gBAAgB,CAACqB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEF,WAAW,CAAC,CAAC;MACnE;IACF,CAAC;IAAA,gBANKJ,UAAUA,CAAAO,EAAA;MAAA,OAAAN,KAAA,CAAAhC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAMf;EAED,IAAMsC,gBAAgB;IAAA,IAAAC,KAAA,GAAAtD,iBAAA,CAAG,aAAY;MACnC,IAAInD,QAAQ,CAACqF,EAAE,KAAK,KAAK,EAAE;QACzB,IAAI,CAACnD,YAAY,EAAE;UACjB,IAAI;YACF,IAAIZ,YAAY,CAAC8B,OAAO,EAAE;cACxB,IAAMsD,OAAO,GAAGpF,YAAY,CAAC8B,OAAc;cAC3C,IAAIsD,OAAO,CAACC,iBAAiB,EAAE;gBAC7B,MAAMD,OAAO,CAACC,iBAAiB,CAAC,CAAC;cACnC,CAAC,MAAM,IAAID,OAAO,CAACE,uBAAuB,EAAE;gBAC1C,MAAMF,OAAO,CAACE,uBAAuB,CAAC,CAAC;cACzC,CAAC,MAAM,IAAIF,OAAO,CAACG,mBAAmB,EAAE;gBACtC,MAAMH,OAAO,CAACG,mBAAmB,CAAC,CAAC;cACrC;YACF;UACF,CAAC,CAAC,OAAOnE,KAAK,EAAE;YACdoE,OAAO,CAACpE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;UAChE;QACF,CAAC,MAAM;UACL,IAAI;YACF,IAAIyC,QAAQ,CAAC4B,cAAc,EAAE;cAC3B,MAAM5B,QAAQ,CAAC4B,cAAc,CAAC,CAAC;YACjC,CAAC,MAAM,IAAK5B,QAAQ,CAAS6B,oBAAoB,EAAE;cACjD,MAAO7B,QAAQ,CAAS6B,oBAAoB,CAAC,CAAC;YAChD,CAAC,MAAM,IAAK7B,QAAQ,CAAS8B,gBAAgB,EAAE;cAC7C,MAAO9B,QAAQ,CAAS8B,gBAAgB,CAAC,CAAC;YAC5C;UACF,CAAC,CAAC,OAAOvE,KAAK,EAAE;YACdoE,OAAO,CAACpE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;UAC9D;QACF;MACF,CAAC,MAAM;QACL,IAAIR,YAAY,EAAE;UAChB,MAAM9B,iBAAiB,CAAC8G,SAAS,CAAC9G,iBAAiB,CAAC+G,eAAe,CAACC,QAAQ,CAAC;QAC/E,CAAC,MAAM;UACL,MAAMhH,iBAAiB,CAAC8G,SAAS,CAAC9G,iBAAiB,CAAC+G,eAAe,CAACE,SAAS,CAAC;QAChF;MACF;MACAlF,eAAe,CAAC,CAACD,YAAY,CAAC;IAChC,CAAC;IAAA,gBAtCKsE,gBAAgBA,CAAA;MAAA,OAAAC,KAAA,CAAAxC,KAAA,OAAAC,SAAA;IAAA;EAAA,GAsCrB;EAED,IAAMoD,sBAAsB;IAAA,IAAAC,KAAA,GAAApE,iBAAA,CAAG,aAAY;MACzC,IAAInD,QAAQ,CAACqF,EAAE,KAAK,KAAK,IAAIF,QAAQ,CAACqC,uBAAuB,EAAE;QAC7D,IAAI;UACF,IAAI,CAAC1E,WAAW,EAAE;YAAA,IAAA2E,iBAAA,EAAAC,qBAAA;YAChB,OAAAD,iBAAA,GAAOpG,QAAQ,CAAC+B,OAAO,sBAAAsE,qBAAA,GAAjBD,iBAAA,CAA2BE,WAAW,qBAAtCD,qBAAA,CAAwCE,uBAAuB,CAAC,CAAC;YACvE7E,cAAc,CAAC,IAAI,CAAC;UACtB,CAAC,MAAM;YACL,MAAMoC,QAAQ,CAAC0C,oBAAoB,CAAC,CAAC;YACrC9E,cAAc,CAAC,KAAK,CAAC;UACvB;QACF,CAAC,CAAC,OAAOe,GAAQ,EAAE;UACjB,IAAMC,YAAY,GAAG,6BAA6B,GAAGD,GAAG,CAACE,OAAO;UAChErB,QAAQ,CAACoB,YAAY,CAAC;UACtB3C,QAAO,oBAAPA,QAAO,CAAG2C,YAAY,CAAC;QACzB;MACF;IACF,CAAC;IAAA,gBAhBKuD,sBAAsBA,CAAA;MAAA,OAAAC,KAAA,CAAAtD,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgB3B;EAED,IAAM4D,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;IAChC,IAAMC,MAAM,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACnC,IAAMC,YAAY,GAAGD,MAAM,CAACE,OAAO,CAAC3F,aAAa,CAAC;IAClD,IAAM4F,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAID,MAAM,CAACI,MAAM;IACpD,IAAMC,QAAQ,GAAGL,MAAM,CAACG,SAAS,CAAC;IAClC3F,gBAAgB,CAAC6F,QAAQ,CAAC;IAC1B,IAAI/G,QAAQ,CAAC+B,OAAO,EAAE;MACpB/B,QAAQ,CAAC+B,OAAO,CAACiF,YAAY,CAACD,QAAQ,EAAE,IAAI,CAAC;IAC/C;EACF,CAAC;EAED,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIC,YAAoB,EAAK;IAC3C,IAAMC,YAAY,GAAGnC,IAAI,CAACoC,KAAK,CAACF,YAAY,GAAG,IAAI,CAAC;IACpD,IAAMG,OAAO,GAAGrC,IAAI,CAACoC,KAAK,CAACD,YAAY,GAAG,EAAE,CAAC;IAC7C,IAAMG,OAAO,GAAGH,YAAY,GAAG,EAAE;IACjC,OAAO,GAAGE,OAAO,IAAIC,OAAO,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAC5D,CAAC;EAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAAS;IAC/B/G,eAAe,CAAC,IAAI,CAAC;IACrB,IAAIiB,kBAAkB,CAACI,OAAO,EAAE;MAC9B6B,YAAY,CAACjC,kBAAkB,CAACI,OAAO,CAAC;IAC1C;IACA,IAAI1B,MAAM,CAACmE,SAAS,EAAE;MACpB7C,kBAAkB,CAACI,OAAO,GAAG2F,UAAU,CAAC,YAAM;QAC5ChH,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC;EAED,IAAMiH,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAU,EAAK;IAC7C,IAAI5H,QAAQ,CAAC+B,OAAO,IAAI1B,MAAM,CAACgE,cAAc,EAAE;MAC7C,IAAMwD,gBAAgB,GAAGD,KAAK,CAACE,aAAa,CAACC,WAAW;MACxD,IAAMC,aAAa,GAAGJ,KAAK,CAACK,WAAW,CAACC,OAAO;MAC/C,IAAMC,UAAU,GAAGH,aAAa,GAAGH,gBAAgB;MACnD,IAAM9C,WAAW,GAAG1E,MAAM,CAACgE,cAAc,GAAG8D,UAAU;MACtDnI,QAAQ,CAAC+B,OAAO,CAAC4B,gBAAgB,CAACoB,WAAW,CAAC;IAChD;EACF,CAAC;EAED,OACE9F,IAAA,CAACV,IAAI;IAAC6J,GAAG,EAAEnI,YAAa;IAACoI,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAE1H,YAAY,IAAIyH,MAAM,CAACE,UAAU,CAAE;IAAAC,QAAA,EACnFpH,KAAK,GACJlC,KAAA,CAACZ,IAAI;MAAC8J,KAAK,EAAEC,MAAM,CAACI,cAAe;MAAAD,QAAA,GACjCxJ,IAAA,CAACT,IAAI;QAAC6J,KAAK,EAAEC,MAAM,CAACK,SAAU;QAAAF,QAAA,EAAEpH;MAAK,CAAO,CAAC,EAC7CpC,IAAA,CAACT,IAAI;QAAC6J,KAAK,EAAEC,MAAM,CAACM,YAAa;QAAAH,QAAA,EAAC;MAElC,CAAM,CAAC,EACPxJ,IAAA,CAACP,SAAS;QACR2J,KAAK,EAAEC,MAAM,CAACO,WAAY;QAC1BC,OAAO,EAAE,SAATA,OAAOA,CAAA,EAAQ;UACbxH,QAAQ,CAAC,IAAI,CAAC;UACd,IAAItB,QAAQ,CAAC+B,OAAO,EAAE;YACpB/B,QAAQ,CAAC+B,OAAO,CAACC,SAAS,CACxB;cAAEC,GAAG,EAAEzC;YAAS,CAAC,EACjB;cACE4C,UAAU,EAAE,KAAK;cACjBD,cAAc,EAAE9B,MAAM,CAAC8B,cAAc,IAAI;YAC3C,CAAC,EACD,KACF,CAAC;UACH;QACF,CAAE;QAAAsG,QAAA,EAEFxJ,IAAA,CAACT,IAAI;UAAC6J,KAAK,EAAEC,MAAM,CAACS,eAAgB;UAAAN,QAAA,EAAC;QAAK,CAAM;MAAC,CACxC,CAAC;IAAA,CACR,CAAC,GAEPtJ,KAAA,CAAAE,SAAA;MAAAoJ,QAAA,GACExJ,IAAA,CAACL,KAAK;QACJwJ,GAAG,EAAEpI,QAAS;QACdqI,KAAK,EAAEC,MAAM,CAACU,KAAM;QACpBC,MAAM,EAAE;UAAEhH,GAAG,EAAEzC;QAAS,CAAE;QAC1B0J,UAAU,EAAErK,UAAU,CAACsK,OAAQ;QAC/BC,iBAAiB,EAAE,KAAM;QACzBC,sBAAsB,EAAElF,0BAA2B;QACnDpE,OAAO,EAAE,SAATA,OAAOA,CAAGsB,KAAK,EAAK;UAClB,IAAMqB,YAAY,GAAG,yBAAyBrB,KAAK,EAAE;UACrDC,QAAQ,CAACoB,YAAY,CAAC;UACtB3C,QAAO,oBAAPA,QAAO,CAAG2C,YAAY,CAAC;QACzB;MAAE,CACH,CAAC,EACDjC,YAAY,IACXtB,KAAA,CAACZ,IAAI;QAAC8J,KAAK,EAAEC,MAAM,CAACgB,QAAS;QAAAb,QAAA,GAC3BtJ,KAAA,CAACZ,IAAI;UAAC8J,KAAK,EAAEC,MAAM,CAACiB,WAAY;UAAAd,QAAA,GAC9BxJ,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAExE,UAAW;YAAC+D,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EAC1DxJ,IAAA,CAACH,OAAO;cAAC2K,IAAI,EAAEpJ,MAAM,CAACmE,SAAS,GAAG,OAAO,GAAG,MAAO;cAACkF,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CACrE,CAAC,EACZ1K,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQnE,UAAU,CAAC,KAAK,CAAC;YAAA,CAAC;YAAC0D,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EACvExJ,IAAA,CAACH,OAAO;cAAC2K,IAAI,EAAC,QAAQ;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CACxC,CAAC,EACZ1K,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAE,SAATA,OAAOA,CAAA;cAAA,OAAQnE,UAAU,CAAC,IAAI,CAAC;YAAA,CAAC;YAAC0D,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EACtExJ,IAAA,CAACH,OAAO;cAAC2K,IAAI,EAAC,cAAc;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CAC9C,CAAC,EACZ1K,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAErC,mBAAoB;YAAC4B,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EACnEtJ,KAAA,CAACX,IAAI;cAAC6J,KAAK,EAAEC,MAAM,CAACsB,SAAU;cAAAnB,QAAA,GAAExH,aAAa,EAAC,GAAC;YAAA,CAAM;UAAC,CAC7C,CAAC,EACXtC,QAAQ,CAACqF,EAAE,KAAK,KAAK,IACpB/E,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAE7C,sBAAuB;YAACoC,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EACtExJ,IAAA,CAACH,OAAO;cAAC2K,IAAI,EAAC,YAAY;cAACC,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CAC5C,CACZ,EACD1K,IAAA,CAACP,SAAS;YAACoK,OAAO,EAAE3D,gBAAiB;YAACkD,KAAK,EAAEC,MAAM,CAACkB,aAAc;YAAAf,QAAA,EAChExJ,IAAA,CAACH,OAAO;cAAC2K,IAAI,EAAE5I,YAAY,GAAG,UAAU,GAAG,UAAW;cAAC6I,IAAI,EAAE,EAAG;cAACC,KAAK,EAAC;YAAO,CAAE;UAAC,CACxE,CAAC;QAAA,CACR,CAAC,EACP1K,IAAA,CAACP,SAAS;UAAC2J,KAAK,EAAEC,MAAM,CAACuB,oBAAqB;UAACf,OAAO,EAAEnB,sBAAuB;UAAAc,QAAA,EAC7ExJ,IAAA,CAACV,IAAI;YAAC8J,KAAK,EAAEC,MAAM,CAACwB,WAAY;YAAArB,QAAA,EAC9BxJ,IAAA,CAACV,IAAI;cACH8J,KAAK,EAAE,CACLC,MAAM,CAACyB,YAAY,EACnB;gBACEC,KAAK,EAAE,GACJ3J,MAAM,CAAC8B,cAAc,GAAG9B,MAAM,CAACgE,cAAc,GAAI,GAAG,IAAI,CAAC;cAE9D,CAAC;YACD,CACH;UAAC,CACE;QAAC,CACE,CAAC,EACZpF,IAAA,CAACV,IAAI;UAAC8J,KAAK,EAAEC,MAAM,CAAC2B,iBAAkB;UAAAxB,QAAA,EACpCtJ,KAAA,CAACX,IAAI;YAAC6J,KAAK,EAAEC,MAAM,CAAC4B,QAAS;YAAAzB,QAAA,GAC1BxB,UAAU,CAAC5G,MAAM,CAAC8B,cAAc,IAAI,CAAC,CAAC,EAAC,IAAE,EAAC,GAAG,EAC7C8E,UAAU,CAAC5G,MAAM,CAACgE,cAAc,IAAI,CAAC,CAAC;UAAA,CACnC;QAAC,CACH,CAAC;MAAA,CACH,CACP;IAAA,CACD;EACH,CACG,CAAC;AAEX,CAAC;AAED,IAAMiE,MAAM,GAAG7J,UAAU,CAAC0L,MAAM,CAAC;EAC/B5B,SAAS,EAAE;IACT6B,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,QAAQ,EAAE,UAAU;IACpBP,KAAK,EAAE;EACT,CAAC;EACDxB,UAAU,EAAE;IACV+B,QAAQ,EAAE,OAAO;IACjBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,IAAI;IACZR,eAAe,EAAE,MAAM;IACvBC,YAAY,EAAE;EAChB,CAAC;EACDrB,KAAK,EAAE;IACLgB,KAAK,EAAE,MAAM;IACba,WAAW,EAAE,EAAE,GAAG;EACpB,CAAC;EACDC,eAAe,EAAE;IACfd,KAAK,EAAE,MAAM;IACbe,MAAM,EAAE,MAAM;IACdF,WAAW,EAAEG;EACf,CAAC;EACD1B,QAAQ,EAAE;IACRiB,QAAQ,EAAE,UAAU;IACpBI,MAAM,EAAE,CAAC;IACTF,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRN,eAAe,EAAE,oBAAoB;IACrCa,OAAO,EAAE;EACX,CAAC;EACDC,kBAAkB,EAAE;IAClBD,OAAO,EAAE;EACX,CAAC;EACDpB,oBAAoB,EAAE;IACpBG,KAAK,EAAE,MAAM;IACbe,MAAM,EAAE,EAAE;IACVI,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE;EACV,CAAC;EACDtB,WAAW,EAAE;IACXiB,MAAM,EAAE,CAAC;IACTX,eAAe,EAAE,0BAA0B;IAC3CC,YAAY,EAAE;EAChB,CAAC;EACDN,YAAY,EAAE;IACZgB,MAAM,EAAE,MAAM;IACdX,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE;EAChB,CAAC;EACDd,WAAW,EAAE;IACX8B,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBH,cAAc,EAAE,eAAe;IAC/BI,SAAS,EAAE;EACb,CAAC;EACDC,YAAY,EAAE;IACZH,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACDG,aAAa,EAAE;IACbJ,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE;EACd,CAAC;EACD9B,aAAa,EAAE;IACbkC,WAAW,EAAE,EAAE;IACfT,OAAO,EAAE,CAAC;IACVZ,YAAY,EAAE,CAAC;IACfD,eAAe,EAAE;EACnB,CAAC;EACDH,iBAAiB,EAAE;IACjBsB,SAAS,EAAE;EACb,CAAC;EACDrB,QAAQ,EAAE;IACRP,KAAK,EAAE,OAAO;IACdgC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDhC,SAAS,EAAE;IACTD,KAAK,EAAE,OAAO;IACdgC,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE;EACd,CAAC;EACDnD,cAAc,EAAE;IACdoD,IAAI,EAAE,CAAC;IACPX,cAAc,EAAE,QAAQ;IACxBG,UAAU,EAAE,QAAQ;IACpBL,OAAO,EAAE;EACX,CAAC;EACDtC,SAAS,EAAE;IACTgB,KAAK,EAAE,SAAS;IAChBgC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBG,YAAY,EAAE;EAChB,CAAC;EACDnD,YAAY,EAAE;IACZe,KAAK,EAAE,MAAM;IACbgC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACD/C,WAAW,EAAE;IACX0C,SAAS,EAAE,EAAE;IACbS,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnB7B,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE;EAChB,CAAC;EACDtB,eAAe,EAAE;IACfY,KAAK,EAAE,OAAO;IACdgC,QAAQ,EAAE,EAAE;IACZE,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}