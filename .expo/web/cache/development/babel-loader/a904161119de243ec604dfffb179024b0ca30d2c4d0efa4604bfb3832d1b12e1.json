{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _excluded = [\"enabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty2(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = _get(_getPrototypeOf(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport { State } from \"../../State\";\nimport { DiagonalDirections, Directions } from \"../../Directions\";\nimport GestureHandler from \"./GestureHandler\";\nimport Vector from \"../tools/Vector\";\nimport { coneToDeviation } from \"../utils\";\nvar DEFAULT_MAX_DURATION_MS = 800;\nvar DEFAULT_MIN_VELOCITY = 700;\nvar DEFAULT_ALIGNMENT_CONE = 30;\nvar DEFAULT_DIRECTION = Directions.RIGHT;\nvar DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\nvar AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nvar DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\nvar FlingGestureHandler = function (_GestureHandler) {\n  function FlingGestureHandler() {\n    var _this;\n    _classCallCheck(this, FlingGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, FlingGestureHandler, [].concat(args));\n    _defineProperty(_this, \"numberOfPointersRequired\", DEFAULT_NUMBER_OF_TOUCHES_REQUIRED);\n    _defineProperty(_this, \"direction\", DEFAULT_DIRECTION);\n    _defineProperty(_this, \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty(_this, \"minVelocity\", DEFAULT_MIN_VELOCITY);\n    _defineProperty(_this, \"delayTimeout\", void 0);\n    _defineProperty(_this, \"maxNumberOfPointersSimultaneously\", 0);\n    _defineProperty(_this, \"keyPointer\", NaN);\n    return _this;\n  }\n  _inherits(FlingGestureHandler, _GestureHandler);\n  return _createClass(FlingGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _superPropGet(FlingGestureHandler, \"init\", this, 3)([ref, propsRef]);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = _objectWithoutProperties(_ref, _excluded);\n      _superPropGet(FlingGestureHandler, \"updateGestureConfig\", this, 3)([_objectSpread({\n        enabled: enabled\n      }, props)]);\n      if (this.config.direction) {\n        this.direction = this.config.direction;\n      }\n      if (this.config.numberOfPointers) {\n        this.numberOfPointersRequired = this.config.numberOfPointers;\n      }\n    }\n  }, {\n    key: \"startFling\",\n    value: function startFling() {\n      var _this2 = this;\n      this.begin();\n      this.maxNumberOfPointersSimultaneously = 1;\n      this.delayTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"tryEndFling\",\n    value: function tryEndFling() {\n      var _this3 = this;\n      var velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n      var getAlignment = function getAlignment(direction, minimalAlignmentCosine) {\n        return (direction & _this3.direction) === direction && velocityVector.isSimilar(Vector.fromDirection(direction), minimalAlignmentCosine);\n      };\n      var axialDirectionsList = Object.values(Directions);\n      var diagonalDirectionsList = Object.values(DiagonalDirections);\n      var axialAlignmentList = axialDirectionsList.map(function (direction) {\n        return getAlignment(direction, AXIAL_DEVIATION_COSINE);\n      });\n      var diagonalAlignmentList = diagonalDirectionsList.map(function (direction) {\n        return getAlignment(direction, DIAGONAL_DEVIATION_COSINE);\n      });\n      var isAligned = axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n      var isFast = velocityVector.magnitude > this.minVelocity;\n      if (this.maxNumberOfPointersSimultaneously === this.numberOfPointersRequired && isAligned && isFast) {\n        clearTimeout(this.delayTimeout);\n        this.activate();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"endFling\",\n    value: function endFling() {\n      if (!this.tryEndFling()) {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      if (!this.isButtonInConfig(event.button)) {\n        return;\n      }\n      this.tracker.addToTracker(event);\n      this.keyPointer = event.pointerId;\n      _superPropGet(FlingGestureHandler, \"onPointerDown\", this, 3)([event]);\n      this.newPointerAction();\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(FlingGestureHandler, \"onPointerAdd\", this, 3)([event]);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      if (this.currentState === State.UNDETERMINED) {\n        this.startFling();\n      }\n      if (this.currentState !== State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n      if (this.tracker.getTrackedPointersCount() > this.maxNumberOfPointersSimultaneously) {\n        this.maxNumberOfPointersSimultaneously = this.tracker.getTrackedPointersCount();\n      }\n    }\n  }, {\n    key: \"pointerMoveAction\",\n    value: function pointerMoveAction(event) {\n      this.tracker.track(event);\n      if (this.currentState !== State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerMove\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerOutOfBounds\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerUp\", this, 3)([event]);\n      this.onUp(event);\n      this.keyPointer = NaN;\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerRemove\", this, 3)([event]);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      if (this.currentState === State.BEGAN) {\n        this.endFling();\n      }\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      _superPropGet(FlingGestureHandler, \"activate\", this, 3)([force]);\n      this.end();\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _superPropGet(FlingGestureHandler, \"resetConfig\", this, 3)([]);\n      this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n      this.direction = DEFAULT_DIRECTION;\n    }\n  }]);\n}(GestureHandler);\nexport { FlingGestureHandler as default };","map":{"version":3,"names":["State","DiagonalDirections","Directions","GestureHandler","Vector","coneToDeviation","DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_VELOCITY","DEFAULT_ALIGNMENT_CONE","DEFAULT_DIRECTION","RIGHT","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","AXIAL_DEVIATION_COSINE","DIAGONAL_DEVIATION_COSINE","FlingGestureHandler","_GestureHandler","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_callSuper","concat","_defineProperty","NaN","_inherits","_createClass","key","value","init","ref","propsRef","_superPropGet","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties","_excluded","_objectSpread","config","direction","numberOfPointers","numberOfPointersRequired","startFling","_this2","begin","maxNumberOfPointersSimultaneously","delayTimeout","setTimeout","fail","maxDurationMs","tryEndFling","_this3","velocityVector","fromVelocity","tracker","keyPointer","getAlignment","minimalAlignmentCosine","isSimilar","fromDirection","axialDirectionsList","Object","values","diagonalDirectionsList","axialAlignmentList","map","diagonalAlignmentList","isAligned","some","Boolean","isFast","magnitude","minVelocity","clearTimeout","activate","endFling","onPointerDown","event","isButtonInConfig","button","addToTracker","pointerId","newPointerAction","tryToSendTouchEvent","onPointerAdd","currentState","UNDETERMINED","BEGAN","getTrackedPointersCount","pointerMoveAction","track","onPointerMove","onPointerOutOfBounds","onPointerUp","onUp","onPointerRemove","removeFromTracker","force","end","resetConfig","default"],"sources":["d:\\Code\\SKiddy V2\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\FlingGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction: Directions = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minVelocity = DEFAULT_MIN_VELOCITY;\n  private delayTimeout!: number;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  private startFling(): void {\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n\n    const getAlignment = (\n      direction: Directions | DiagonalDirections,\n      minimalAlignmentCosine: number\n    ) => {\n      return (\n        (direction & this.direction) === direction &&\n        velocityVector.isSimilar(\n          Vector.fromDirection(direction),\n          minimalAlignmentCosine\n        )\n      );\n    };\n\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n\n    // List of alignments to all activated directions\n    const axialAlignmentList = axialDirectionsList.map((direction) =>\n      getAlignment(direction, AXIAL_DEVIATION_COSINE)\n    );\n\n    const diagonalAlignmentList = diagonalDirectionsList.map((direction) =>\n      getAlignment(direction, DIAGONAL_DEVIATION_COSINE)\n    );\n\n    const isAligned =\n      axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n\n    const isFast = velocityVector.magnitude > this.minVelocity;\n\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      isAligned &&\n      isFast\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.currentState === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.getTrackedPointersCount() >\n      this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.getTrackedPointersCount();\n    }\n  }\n\n  private pointerMoveAction(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    if (this.currentState === State.BEGAN) {\n      this.endFling();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}