{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from \"./src/screens/MyCoursesScreen\";\nimport { CourseDetailScreen } from \"./src/screens/CourseDetailScreen\";\nimport { SettingsScreen } from \"./src/screens/SettingsScreen\";\nimport { HelpScreen } from \"./src/screens/HelpScreen\";\nimport { CoursePlayerScreen } from \"./src/screens/CoursePlayerScreen\";\nimport { HomeScreen } from \"./src/screens/HomeScreen\";\nimport { LoginScreen } from \"./src/screens/LoginScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { AuthProvider, useAuth } from \"./src/context/AuthContext\";\nimport { ThemeProvider, useTheme } from \"./src/context/ThemeContext\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar AppContent = function AppContent() {\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var _useState = useState('/home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRoute = _useState2[0],\n    setCurrentRoute = _useState2[1];\n  var _useAuth = useAuth(),\n    isAuthenticated = _useAuth.isAuthenticated,\n    isLoading = _useAuth.isLoading;\n  var _useTheme = useTheme(),\n    colors = _useTheme.colors;\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = navigation.addListener('state', function (e) {\n      var state = e.data.state;\n      if (state) {\n        var currentScreen = state.routes[state.index].name;\n        setCurrentRoute('/' + currentScreen.toLowerCase().replace(/([A-Z])/g, '-$1').toLowerCase());\n      }\n    });\n    return unsubscribe;\n  }, [navigation]);\n  var handleNavigation = function handleNavigation(route) {\n    var screenName = route.replace('/', '').split('-').map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join('');\n    navigation.navigate(screenName);\n  };\n  if (isLoading) {\n    return _jsx(View, {\n      style: [styles.container, styles.loadingContainer],\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#4F46E5\"\n      })\n    });\n  }\n  if (!isAuthenticated) {\n    return _jsx(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        animation: Platform.OS === 'web' ? 'none' : 'default'\n      },\n      children: _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: [styles.appContainer, {\n      backgroundColor: colors.background\n    }],\n    children: [_jsx(Header, {}), _jsxs(View, {\n      style: styles.mainLayout,\n      children: [!isMobile && _jsx(Sidebar, {\n        navigation: {\n          navigate: handleNavigation\n        },\n        currentRoute: currentRoute\n      }), _jsx(View, {\n        style: styles.content,\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerShown: false,\n            animation: Platform.OS === 'web' ? 'none' : 'default'\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Home\",\n            component: HomeScreen\n          }), _jsx(Stack.Screen, {\n            name: \"MyCourses\",\n            component: MyCoursesScreen\n          }), _jsx(Stack.Screen, {\n            name: \"CourseDetail\",\n            component: CourseDetailScreen\n          }), _jsx(Stack.Screen, {\n            name: \"CoursePlayer\",\n            component: CoursePlayerScreen,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen\n          }), _jsx(Stack.Screen, {\n            name: \"Help\",\n            component: HelpScreen\n          })]\n        })\n      })]\n    })]\n  });\n};\nexport default function App() {\n  return _jsx(GestureHandlerRootView, {\n    style: styles.container,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(ThemeProvider, {\n        children: _jsx(AuthProvider, {\n          children: _jsx(NavigationContainer, {\n            children: _jsx(AppContent, {})\n          })\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  appContainer: {\n    flex: 1\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  content: {\n    flex: 1\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB'\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","NavigationContainer","createNativeStackNavigator","View","StyleSheet","Platform","useWindowDimensions","ActivityIndicator","SafeAreaProvider","GestureHandlerRootView","MyCoursesScreen","CourseDetailScreen","SettingsScreen","HelpScreen","CoursePlayerScreen","HomeScreen","LoginScreen","Sidebar","Header","AuthProvider","useAuth","ThemeProvider","useTheme","useNavigation","jsx","_jsx","jsxs","_jsxs","Stack","AppContent","_useWindowDimensions","width","isMobile","_useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","_useAuth","isAuthenticated","isLoading","_useTheme","colors","navigation","unsubscribe","addListener","e","state","data","currentScreen","routes","index","name","toLowerCase","replace","handleNavigation","route","screenName","split","map","word","charAt","toUpperCase","slice","join","navigate","style","styles","container","loadingContainer","children","size","color","Navigator","screenOptions","headerShown","animation","OS","Screen","component","appContainer","backgroundColor","background","mainLayout","content","options","App","create","flex","flexDirection","screenContent","justifyContent","alignItems"],"sources":["f:/Coding/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet, Platform, useWindowDimensions, ActivityIndicator } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from './src/screens/MyCoursesScreen';\nimport { CourseDetailScreen } from './src/screens/CourseDetailScreen';\nimport { SettingsScreen } from './src/screens/SettingsScreen';\nimport { HelpScreen } from './src/screens/HelpScreen';\nimport { CoursePlayerScreen } from './src/screens/CoursePlayerScreen';\nimport { HomeScreen } from './src/screens/HomeScreen';\nimport { LoginScreen } from './src/screens/LoginScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\nimport { AuthProvider, useAuth } from './src/context/AuthContext';\nimport { ThemeProvider, useTheme } from './src/context/ThemeContext';\nimport { useNavigation } from '@react-navigation/native';\n\nconst Stack = createNativeStackNavigator();\n\nconst AppContent = () => {\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n  const [currentRoute, setCurrentRoute] = useState('/home');\n  const { isAuthenticated, isLoading } = useAuth();\n  const { colors } = useTheme();\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('state', (e) => {\n      const state = e.data.state;\n      if (state) {\n        const currentScreen = state.routes[state.index].name;\n        setCurrentRoute('/' + currentScreen.toLowerCase().replace(/([A-Z])/g, '-$1').toLowerCase());\n      }\n    });\n\n    return unsubscribe;\n  }, [navigation]);\n\n  const handleNavigation = (route: string) => {\n    const screenName = route.replace('/', '').split('-').map(\n      word => word.charAt(0).toUpperCase() + word.slice(1)\n    ).join('');\n    navigation.navigate(screenName as never);\n  };\n\n  if (isLoading) {\n    return (\n      <View style={[styles.container, styles.loadingContainer]}>\n        <ActivityIndicator size=\"large\" color=\"#4F46E5\" />\n      </View>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <Stack.Navigator\n        screenOptions={{\n          headerShown: false,\n          animation: Platform.OS === 'web' ? 'none' : 'default',\n        }}\n      >\n        <Stack.Screen name=\"Login\" component={LoginScreen} />\n      </Stack.Navigator>\n    );\n  }\n\n  return (\n    <View style={[styles.appContainer, { backgroundColor: colors.background }]}>\n      <Header />\n      <View style={styles.mainLayout}>\n        {!isMobile && (\n          <Sidebar \n            navigation={{ navigate: handleNavigation }}\n            currentRoute={currentRoute}\n          />\n        )}\n        <View style={styles.content}>\n          <Stack.Navigator\n            screenOptions={{\n              headerShown: false,\n              animation: Platform.OS === 'web' ? 'none' : 'default',\n            }}\n          >\n            <Stack.Screen name=\"Home\" component={HomeScreen} />\n            <Stack.Screen name=\"MyCourses\" component={MyCoursesScreen} />\n            <Stack.Screen name=\"CourseDetail\" component={CourseDetailScreen} />\n            <Stack.Screen name=\"CoursePlayer\" component={CoursePlayerScreen} options={{ headerShown: false }} />\n            <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n            <Stack.Screen name=\"Help\" component={HelpScreen} />\n          </Stack.Navigator>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <SafeAreaProvider>\n        <ThemeProvider>\n          <AuthProvider>\n            <NavigationContainer>\n              <AppContent />\n            </NavigationContainer>\n          </AuthProvider>\n        </ThemeProvider>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appContainer: {\n    flex: 1,\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  content: {\n    flex: 1,\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB',\n  },\n  loadingContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}