{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from \"./src/screens/MyCoursesScreen\";\nimport { LearningPathScreen } from \"./src/screens/LearningPathScreen\";\nimport { SavedScreen } from \"./src/screens/SavedScreen\";\nimport { SettingsScreen } from \"./src/screens/SettingsScreen\";\nimport { HelpScreen } from \"./src/screens/HelpScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var _useState = useState('/my-courses'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRoute = _useState2[0],\n    setCurrentRoute = _useState2[1];\n  return _jsx(GestureHandlerRootView, {\n    style: styles.container,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        onStateChange: function onStateChange(state) {\n          var _state$routes$state$i;\n          var currentScreen = state == null ? void 0 : (_state$routes$state$i = state.routes[state.index]) == null ? void 0 : _state$routes$state$i.name;\n          setCurrentRoute('/' + currentScreen.toLowerCase());\n        },\n        children: _jsxs(View, {\n          style: styles.appContainer,\n          children: [_jsx(Header, {}), _jsxs(View, {\n            style: styles.mainLayout,\n            children: [!isMobile && _jsx(Sidebar, {\n              navigation: {\n                navigate: function navigate(route) {\n                  var screenName = route.replace('/', '').split('-').map(function (word) {\n                    return word.charAt(0).toUpperCase() + word.slice(1);\n                  }).join('');\n                  navigation.navigate(screenName);\n                }\n              },\n              currentRoute: currentRoute\n            }), _jsx(View, {\n              style: styles.content,\n              children: _jsxs(Stack.Navigator, {\n                screenOptions: {\n                  headerShown: false,\n                  contentStyle: styles.screenContent\n                },\n                initialRouteName: \"MyCourses\",\n                children: [_jsx(Stack.Screen, {\n                  name: \"MyCourses\",\n                  component: MyCoursesScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"LearningPath\",\n                  component: LearningPathScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"Saved\",\n                  component: SavedScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"Settings\",\n                  component: SettingsScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"Help\",\n                  component: HelpScreen\n                })]\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB'\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  content: {\n    flex: 1\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB'\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","View","StyleSheet","useWindowDimensions","SafeAreaProvider","GestureHandlerRootView","MyCoursesScreen","LearningPathScreen","SavedScreen","SettingsScreen","HelpScreen","Sidebar","Header","jsx","_jsx","jsxs","_jsxs","Stack","App","_useWindowDimensions","width","isMobile","_useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","style","styles","container","children","onStateChange","state","_state$routes$state$i","currentScreen","routes","index","name","toLowerCase","appContainer","mainLayout","navigation","navigate","route","screenName","replace","split","map","word","charAt","toUpperCase","slice","join","content","Navigator","screenOptions","headerShown","contentStyle","screenContent","initialRouteName","Screen","component","create","flex","backgroundColor","flexDirection"],"sources":["d:/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from './src/screens/MyCoursesScreen';\nimport { LearningPathScreen } from './src/screens/LearningPathScreen';\nimport { SavedScreen } from './src/screens/SavedScreen';\nimport { SettingsScreen } from './src/screens/SettingsScreen';\nimport { HelpScreen } from './src/screens/HelpScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n  const [currentRoute, setCurrentRoute] = useState('/my-courses');\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <SafeAreaProvider>\n        <NavigationContainer\n          onStateChange={(state) => {\n            const currentScreen = state?.routes[state.index]?.name;\n            setCurrentRoute('/' + currentScreen.toLowerCase());\n          }}\n        >\n          <View style={styles.appContainer}>\n            <Header />\n            <View style={styles.mainLayout}>\n              {!isMobile && <Sidebar navigation={{ navigate: (route) => {\n                const screenName = route.replace('/', '').split('-').map(\n                  word => word.charAt(0).toUpperCase() + word.slice(1)\n                ).join('');\n                navigation.navigate(screenName);\n              }}} currentRoute={currentRoute} />}\n              <View style={styles.content}>\n                <Stack.Navigator\n                  screenOptions={{\n                    headerShown: false,\n                    contentStyle: styles.screenContent,\n                  }}\n                  initialRouteName=\"MyCourses\"\n                >\n                  <Stack.Screen name=\"MyCourses\" component={MyCoursesScreen} />\n                  <Stack.Screen name=\"LearningPath\" component={LearningPathScreen} />\n                  <Stack.Screen name=\"Saved\" component={SavedScreen} />\n                  <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n                  <Stack.Screen name=\"Help\" component={HelpScreen} />\n                </Stack.Navigator>\n              </View>\n            </View>\n          </View>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  content: {\n    flex: 1,\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}