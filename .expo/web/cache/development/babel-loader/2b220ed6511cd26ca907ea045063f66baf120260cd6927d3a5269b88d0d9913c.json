{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var VideoPlayer = function VideoPlayer(_ref) {\n  var videoId = _ref.videoId,\n    accessToken = _ref.accessToken,\n    onComplete = _ref.onComplete,\n    onProgress = _ref.onProgress,\n    onTimeUpdate = _ref.onTimeUpdate,\n    _ref$initialProgress = _ref.initialProgress,\n    initialProgress = _ref$initialProgress === void 0 ? 0 : _ref$initialProgress,\n    _ref$isLocked = _ref.isLocked,\n    isLocked = _ref$isLocked === void 0 ? false : _ref$isLocked,\n    onSubscribeClick = _ref.onSubscribeClick;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFullscreen = _useState2[0],\n    setIsFullscreen = _useState2[1];\n  var embedUrl = `https://app.tpstreams.com/embed/6u448b/${videoId}/?access_token=${accessToken}`;\n  if (isLocked) {\n    return _jsxs(View, {\n      style: [styles.container, styles.lockedContainer],\n      children: [_jsxs(View, {\n        style: styles.lockOverlay,\n        children: [_jsx(Feather, {\n          name: \"lock\",\n          size: 48,\n          color: \"white\"\n        }), _jsx(Text, {\n          style: styles.lockedText,\n          children: \"This content is locked\"\n        }), _jsx(Text, {\n          style: styles.lockedSubtext,\n          children: \"Subscribe to unlock all courses and videos\"\n        }), _jsx(Pressable, {\n          style: styles.subscribeButton,\n          onPress: onSubscribeClick,\n          children: _jsx(Text, {\n            style: styles.subscribeButtonText,\n            children: \"Subscribe Now\"\n          })\n        })]\n      }), _jsx(View, {\n        style: styles.blurOverlay,\n        children: _jsx(\"div\", {\n          style: {\n            width: '100%',\n            height: '100%',\n            backgroundColor: 'black',\n            opacity: 0.3,\n            pointerEvents: 'none'\n          }\n        })\n      })]\n    });\n  }\n  return _jsx(View, {\n    style: [styles.container, isFullscreen && styles.fullscreen],\n    children: _jsx(\"iframe\", {\n      src: embedUrl,\n      style: {\n        border: 'none',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'black'\n      },\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    aspectRatio: 16 / 9\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999\n  },\n  lockedContainer: {\n    position: 'relative'\n  },\n  lockOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    zIndex: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  blurOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1\n  },\n  lockedText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 16,\n    textAlign: 'center'\n  },\n  lockedSubtext: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 16,\n    marginTop: 8,\n    textAlign: 'center'\n  },\n  subscribeButton: {\n    backgroundColor: '#7C3AED',\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 24\n  },\n  subscribeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","Pressable","Text","Feather","jsx","_jsx","jsxs","_jsxs","VideoPlayer","_ref","videoId","accessToken","onComplete","onProgress","onTimeUpdate","_ref$initialProgress","initialProgress","_ref$isLocked","isLocked","onSubscribeClick","_useState","_useState2","_slicedToArray","isFullscreen","setIsFullscreen","embedUrl","style","styles","container","lockedContainer","children","lockOverlay","name","size","color","lockedText","lockedSubtext","subscribeButton","onPress","subscribeButtonText","blurOverlay","width","height","backgroundColor","opacity","pointerEvents","fullscreen","src","border","allow","allowFullScreen","create","flex","borderRadius","overflow","aspectRatio","position","top","left","right","bottom","zIndex","justifyContent","alignItems","padding","fontSize","fontWeight","marginTop","textAlign","paddingHorizontal","paddingVertical"],"sources":["d:/Code/SKiddy V2/src/components/video/VideoPlayer.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet, Platform, Pressable, Text } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  accessToken: string;\n  onComplete?: () => void;\n  onProgress?: (progress: number) => void;\n  onTimeUpdate?: (time: number) => void;\n  initialProgress?: number;\n  isLocked?: boolean;\n  onSubscribeClick?: () => void;\n}\n\nexport const VideoPlayer = ({\n  videoId,\n  accessToken,\n  onComplete,\n  onProgress,\n  onTimeUpdate,\n  initialProgress = 0,\n  isLocked = false,\n  onSubscribeClick,\n}: VideoPlayerProps) => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const embedUrl = `https://app.tpstreams.com/embed/6u448b/${videoId}/?access_token=${accessToken}`;\n\n  if (isLocked) {\n    return (\n      <View style={[styles.container, styles.lockedContainer]}>\n        <View style={styles.lockOverlay}>\n          <Feather name=\"lock\" size={48} color=\"white\" />\n          <Text style={styles.lockedText}>This content is locked</Text>\n          <Text style={styles.lockedSubtext}>\n            Subscribe to unlock all courses and videos\n          </Text>\n          <Pressable \n            style={styles.subscribeButton}\n            onPress={onSubscribeClick}\n          >\n            <Text style={styles.subscribeButtonText}>Subscribe Now</Text>\n          </Pressable>\n        </View>\n        <View style={styles.blurOverlay}>\n          <div\n            style={{\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'black',\n              opacity: 0.3,\n              pointerEvents: 'none',\n            }}\n          />\n        </View>\n      </View>\n    );\n  }\n\n  return (\n    <View style={[styles.container, isFullscreen && styles.fullscreen]}>\n      <iframe\n        src={embedUrl}\n        style={{\n          border: 'none',\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'black',\n        }}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    aspectRatio: 16 / 9,\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999,\n  },\n  lockedContainer: {\n    position: 'relative',\n  },\n  lockOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n    zIndex: 2,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  blurOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 1,\n  },\n  lockedText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginTop: 16,\n    textAlign: 'center',\n  },\n  lockedSubtext: {\n    color: 'rgba(255, 255, 255, 0.8)',\n    fontSize: 16,\n    marginTop: 8,\n    textAlign: 'center',\n  },\n  subscribeButton: {\n    backgroundColor: '#7C3AED',\n    paddingHorizontal: 24,\n    paddingVertical: 12,\n    borderRadius: 8,\n    marginTop: 24,\n  },\n  subscribeButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}