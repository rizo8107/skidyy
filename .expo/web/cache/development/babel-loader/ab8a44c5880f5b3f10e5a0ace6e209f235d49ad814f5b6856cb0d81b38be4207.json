{"ast":null,"code":"'use strict';\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _worklet_8572812212676_init_data = {\n  code: \"function ReanimatedError_errorsJs1(message){const prefix='[Reanimated]';const errorInstance=new Error(message?prefix+\\\" \\\"+message:prefix);errorInstance.name='ReanimatedError';return errorInstance;}\",\n  location: \"f:\\\\Coding\\\\Code\\\\SKiddy V2\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\errors.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"ReanimatedError_errorsJs1\\\",\\\"message\\\",\\\"prefix\\\",\\\"errorInstance\\\",\\\"Error\\\",\\\"name\\\"],\\\"sources\\\":[\\\"f:/Coding/Code/SKiddy V2/node_modules/react-native-reanimated/lib/module/errors.js\\\"],\\\"mappings\\\":\\\"AAKmC,SAAAA,yBAAgCA,CAAEC,OAAA,EAGnE,KAAM,CAAAC,MAAM,CAAG,cAAc,CAC7B,KAAM,CAAAC,aAAa,CAAG,GAAI,CAAAC,KAAK,CAACH,OAAO,CAAMC,MAAM,KAAID,OAAO,CAAKC,MAAM,CAAC,CAC1EC,aAAa,CAACE,IAAI,CAAG,iBAAiB,CACtC,MAAO,CAAAF,aAAa,CACtB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.2\"\n};\nvar ReanimatedErrorConstructor = function () {\n  var _e = [new global.Error(), 1, -27];\n  var ReanimatedError = function ReanimatedError(message) {\n    var prefix = '[Reanimated]';\n    var errorInstance = new Error(message ? `${prefix} ${message}` : prefix);\n    errorInstance.name = 'ReanimatedError';\n    return errorInstance;\n  };\n  ReanimatedError.__closure = {};\n  ReanimatedError.__workletHash = 8572812212676;\n  ReanimatedError.__initData = _worklet_8572812212676_init_data;\n  ReanimatedError.__stackDetails = _e;\n  return ReanimatedError;\n}();\nexport { ReanimatedErrorConstructor as ReanimatedError };\nvar _worklet_15830218447589_init_data = {\n  code: \"function registerReanimatedError_errorsJs2(){const{ReanimatedErrorConstructor}=this.__closure;if(!_WORKLET){throw new Error('[Reanimated] registerReanimatedError() must be called on Worklet runtime');}global.ReanimatedError=ReanimatedErrorConstructor;}\",\n  location: \"f:\\\\Coding\\\\Code\\\\SKiddy V2\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\errors.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"registerReanimatedError_errorsJs2\\\",\\\"ReanimatedErrorConstructor\\\",\\\"__closure\\\",\\\"_WORKLET\\\",\\\"Error\\\",\\\"global\\\",\\\"ReanimatedError\\\"],\\\"sources\\\":[\\\"f:/Coding/Code/SKiddy V2/node_modules/react-native-reanimated/lib/module/errors.js\\\"],\\\"mappings\\\":\\\"AAmBO,SAAAA,iCAAmCA,CAAA,QAAAC,0BAAA,OAAAC,SAAA,CAGxC,GAAI,CAACC,QAAQ,CAAE,CACb,KAAM,IAAI,CAAAC,KAAK,CAAC,0EAA0E,CAAC,CAC7F,CACAC,MAAM,CAACC,eAAe,CAAGL,0BAA0B,CACrD\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.2\"\n};\nexport var registerReanimatedError = function () {\n  var _e = [new global.Error(), -2, -27];\n  var registerReanimatedError = function registerReanimatedError() {\n    if (!_WORKLET) {\n      throw new Error('[Reanimated] registerReanimatedError() must be called on Worklet runtime');\n    }\n    global.ReanimatedError = ReanimatedErrorConstructor;\n  };\n  registerReanimatedError.__closure = {\n    ReanimatedErrorConstructor: ReanimatedErrorConstructor\n  };\n  registerReanimatedError.__workletHash = 15830218447589;\n  registerReanimatedError.__initData = _worklet_15830218447589_init_data;\n  registerReanimatedError.__stackDetails = _e;\n  return registerReanimatedError;\n}();\nvar _workletStackDetails = new Map();\nexport function registerWorkletStackDetails(hash, stackDetails) {\n  _workletStackDetails.set(hash, stackDetails);\n}\nfunction getBundleOffset(error) {\n  var _error$stack, _error$stack$split;\n  var frame = (_error$stack = error.stack) == null ? void 0 : (_error$stack$split = _error$stack.split('\\n')) == null ? void 0 : _error$stack$split[0];\n  if (frame) {\n    var parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      var _parsedFrame = _slicedToArray(parsedFrame, 4),\n        file = _parsedFrame[1],\n        line = _parsedFrame[2],\n        col = _parsedFrame[3];\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\nfunction processStack(stack) {\n  var workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  var result = stack;\n  workletStackEntries == null ? void 0 : workletStackEntries.forEach(function (match) {\n    var _match$split$map = match.split(/:|_/).map(Number),\n      _match$split$map2 = _slicedToArray(_match$split$map, 4),\n      hash = _match$split$map2[1],\n      origLine = _match$split$map2[2],\n      origCol = _match$split$map2[3];\n    var errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    var _errorDetails = _slicedToArray(errorDetails, 3),\n      error = _errorDetails[0],\n      lineOffset = _errorDetails[1],\n      colOffset = _errorDetails[2];\n    var _getBundleOffset = getBundleOffset(error),\n      _getBundleOffset2 = _slicedToArray(_getBundleOffset, 3),\n      bundleFile = _getBundleOffset2[0],\n      bundleLine = _getBundleOffset2[1],\n      bundleCol = _getBundleOffset2[2];\n    var line = origLine + bundleLine + lineOffset;\n    var col = origCol + bundleCol + colOffset;\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\nexport function reportFatalErrorOnJS(_ref) {\n  var message = _ref.message,\n    stack = _ref.stack;\n  var error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  error.jsEngine = 'reanimated';\n  global.ErrorUtils.reportFatalError(error);\n}","map":{"version":3,"names":["_slicedToArray","_worklet_8572812212676_init_data","code","location","sourceMap","version","ReanimatedErrorConstructor","_e","global","Error","ReanimatedError","message","prefix","errorInstance","name","__closure","__workletHash","__initData","__stackDetails","_worklet_15830218447589_init_data","registerReanimatedError","_WORKLET","_workletStackDetails","Map","registerWorkletStackDetails","hash","stackDetails","set","getBundleOffset","error","_error$stack","_error$stack$split","frame","stack","split","parsedFrame","exec","_parsedFrame","file","line","col","Number","processStack","workletStackEntries","match","result","forEach","_match$split$map","map","_match$split$map2","origLine","origCol","errorDetails","get","_errorDetails","lineOffset","colOffset","_getBundleOffset","_getBundleOffset2","bundleFile","bundleLine","bundleCol","replace","reportFatalErrorOnJS","_ref","undefined","jsEngine","ErrorUtils","reportFatalError"],"sources":["f:\\Coding\\Code\\SKiddy V2\\node_modules\\react-native-reanimated\\src\\errors.ts"],"sourcesContent":["/* eslint-disable reanimated/use-reanimated-error */\n'use strict';\nimport type { WorkletStackDetails } from './commonTypes';\n\ntype ReanimatedError = Error & 'ReanimatedError'; // signed type\n\ninterface ReanimatedErrorConstructor extends Error {\n  new (message?: string): ReanimatedError;\n  (message?: string): ReanimatedError;\n  readonly prototype: ReanimatedError;\n}\n\nconst ReanimatedErrorConstructor: ReanimatedErrorConstructor =\n  function ReanimatedError(message?: string) {\n    'worklet';\n    const prefix = '[Reanimated]';\n    const errorInstance = new Error(message ? `${prefix} ${message}` : prefix);\n    errorInstance.name = 'ReanimatedError';\n    return errorInstance;\n  } as ReanimatedErrorConstructor;\n\nexport { ReanimatedErrorConstructor as ReanimatedError };\n\n/**\n * Registers `ReanimatedError` in global scope. Use it only for Worklet\n * runtimes.\n */\nexport function registerReanimatedError() {\n  'worklet';\n  if (!_WORKLET) {\n    throw new Error(\n      '[Reanimated] registerReanimatedError() must be called on Worklet runtime'\n    );\n  }\n  (global as Record<string, unknown>).ReanimatedError =\n    ReanimatedErrorConstructor;\n}\n\nconst _workletStackDetails = new Map<number, WorkletStackDetails>();\n\nexport function registerWorkletStackDetails(\n  hash: number,\n  stackDetails: WorkletStackDetails\n) {\n  _workletStackDetails.set(hash, stackDetails);\n}\n\nfunction getBundleOffset(error: Error): [string, number, number] {\n  const frame = error.stack?.split('\\n')?.[0];\n  if (frame) {\n    const parsedFrame = /@([^@]+):(\\d+):(\\d+)/.exec(frame);\n    if (parsedFrame) {\n      const [, file, line, col] = parsedFrame;\n      return [file, Number(line), Number(col)];\n    }\n  }\n  return ['unknown', 0, 0];\n}\n\nfunction processStack(stack: string): string {\n  const workletStackEntries = stack.match(/worklet_(\\d+):(\\d+):(\\d+)/g);\n  let result = stack;\n  workletStackEntries?.forEach((match) => {\n    const [, hash, origLine, origCol] = match.split(/:|_/).map(Number);\n    const errorDetails = _workletStackDetails.get(hash);\n    if (!errorDetails) {\n      return;\n    }\n    const [error, lineOffset, colOffset] = errorDetails;\n    const [bundleFile, bundleLine, bundleCol] = getBundleOffset(error);\n    const line = origLine + bundleLine + lineOffset;\n    const col = origCol + bundleCol + colOffset;\n\n    result = result.replace(match, `${bundleFile}:${line}:${col}`);\n  });\n  return result;\n}\n\nexport function reportFatalErrorOnJS({\n  message,\n  stack,\n}: {\n  message: string;\n  stack?: string;\n}) {\n  const error = new Error();\n  error.message = message;\n  error.stack = stack ? processStack(stack) : undefined;\n  error.name = 'ReanimatedError';\n  // @ts-ignore React Native's ErrorUtils implementation extends the Error type with jsEngine field\n  error.jsEngine = 'reanimated';\n  // @ts-ignore the reportFatalError method is an internal method of ErrorUtils not exposed in the type definitions\n  global.ErrorUtils.reportFatalError(error);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}