{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { findNodeHandle } from \"../platformFunctions/findNodeHandle\";\nimport \"../layoutReanimation/animationsManager.js\";\nimport invariant from 'invariant';\nimport { adaptViewConfig } from \"../ConfigHelper.js\";\nimport { RNRenderer } from \"../platform-specific/RNRenderer\";\nimport { enableLayoutAnimations } from \"../core.js\";\nimport { SharedTransition, LayoutAnimationType } from \"../layoutReanimation/index.js\";\nimport { getShadowNodeWrapperFromRef } from \"../fabricUtils\";\nimport { removeFromPropsRegistry } from \"../PropsRegistry.js\";\nimport { getReduceMotionFromConfig } from \"../animation/util.js\";\nimport { maybeBuild } from \"../animationBuilder.js\";\nimport { SkipEnteringContext } from \"../component/LayoutAnimationConfig.js\";\nimport JSPropsUpdater from \"./JSPropsUpdater\";\nimport { flattenArray } from \"./utils.js\";\nimport setAndForwardRef from \"./setAndForwardRef.js\";\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from \"../PlatformChecker.js\";\nimport { InlinePropManager } from \"./InlinePropManager.js\";\nimport { PropsFilter } from \"./PropsFilter.js\";\nimport { startWebLayoutAnimation, tryActivateLayoutTransition, configureWebLayoutAnimations, getReducedMotionFromConfig, saveSnapshot } from \"../layoutReanimation/web/index.js\";\nimport { updateLayoutAnimations } from \"../UpdateLayoutAnimations.js\";\nimport { addHTMLMutationObserver } from \"../layoutReanimation/web/domUtils.js\";\nimport { getViewInfo } from \"./getViewInfo.js\";\nimport { NativeEventsManager } from \"./NativeEventsManager.js\";\nimport { ReanimatedError } from \"../errors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar IS_WEB = isWeb();\nvar IS_JEST = isJest();\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style == null ? void 0 : style.viewDescriptors;\n  });\n}\nvar id = 0;\nexport function createAnimatedComponent(Component, options) {\n  invariant(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    function AnimatedComponent(props) {\n      var _this;\n      _classCallCheck(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _this._styles = null;\n      _this._componentViewTag = -1;\n      _this._isFirstRender = true;\n      _this.jestAnimatedStyle = {\n        value: {}\n      };\n      _this._component = null;\n      _this._sharedElementTransition = null;\n      _this._jsPropsUpdater = new JSPropsUpdater();\n      _this._InlinePropManager = new InlinePropManager();\n      _this._PropsFilter = new PropsFilter();\n      _this.reanimatedID = id++;\n      _this._setComponentRef = setAndForwardRef({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = findNodeHandle(ref);\n          if (tag !== null) {\n            _this._componentViewTag = tag;\n          }\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!SHOULD_BE_USE_WEB) {\n              enableLayoutAnimations(true, false);\n            }\n            if (sharedTransitionTag) {\n              _this._configureSharedTransition();\n            }\n            if (exiting && isFabric()) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n              if (!reduceMotionInExiting) {\n                var _this$props2;\n                updateLayoutAnimations(tag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props2 = _this.props) == null ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n              }\n            }\n            var skipEntering = (_this$context = _this.context) == null ? void 0 : _this$context.current;\n            if (entering && !skipEntering && !IS_WEB) {\n              var _this$props3;\n              updateLayoutAnimations(tag, LayoutAnimationType.ENTERING, maybeBuild(entering, (_this$props3 = _this.props) == null ? void 0 : _this$props3.style, AnimatedComponent.displayName));\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n      if (IS_JEST) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n      }\n      var _entering = _this.props.entering;\n      if (_entering && isFabric()) {\n        var _this$props4;\n        updateLayoutAnimations(_this.reanimatedID, LayoutAnimationType.ENTERING, maybeBuild(_entering, (_this$props4 = _this.props) == null ? void 0 : _this$props4.style, AnimatedComponent.displayName));\n      }\n      return _this;\n    }\n    _inherits(AnimatedComponent, _React$Component);\n    return _createClass(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this$_NativeEventsMa;\n        this._componentViewTag = this._getComponentViewTag();\n        if (!IS_WEB) {\n          this._NativeEventsManager = new NativeEventsManager(this, options);\n        }\n        (_this$_NativeEventsMa = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa.attachEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          var _this$context2;\n          if (this.props.exiting) {\n            saveSnapshot(this._component);\n          }\n          if (!this.props.entering || getReducedMotionFromConfig(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          var skipEntering = (_this$context2 = this.context) == null ? void 0 : _this$context2.current;\n          if (!skipEntering) {\n            startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.ENTERING);\n          } else {\n            this._component.style.visibility = 'initial';\n          }\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_NativeEventsMa2, _this$_sharedElementT;\n        (_this$_NativeEventsMa2 = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa2.detachEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        if (this.props.sharedTransitionTag) {\n          this._configureSharedTransition(true);\n        }\n        (_this$_sharedElementT = this._sharedElementTransition) == null ? void 0 : _this$_sharedElementT.unregisterTransition(this._componentViewTag, true);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this._component && exiting && !getReducedMotionFromConfig(exiting)) {\n          addHTMLMutationObserver();\n          startWebLayoutAnimation(this.props, this._component, LayoutAnimationType.EXITING);\n        } else if (exiting && !IS_WEB && !isFabric()) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? getReduceMotionFromConfig(exiting.getReduceMotion()) : getReduceMotionFromConfig();\n          if (!reduceMotionInExiting) {\n            var _this$props5;\n            updateLayoutAnimations(this._componentViewTag, LayoutAnimationType.EXITING, maybeBuild(exiting, (_this$props5 = this.props) == null ? void 0 : _this$props5.style, AnimatedComponent.displayName));\n          }\n        }\n      }\n    }, {\n      key: \"_getComponentViewTag\",\n      value: function _getComponentViewTag() {\n        return this._getViewInfo().viewTag;\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (this._componentViewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var style of this._styles) {\n            style.viewDescriptors.remove(this._componentViewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) != null && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._componentViewTag);\n          }\n          if (isFabric()) {\n            removeFromPropsRegistry(this._componentViewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options != null && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component;\n          (_this$_component = this._component) == null ? void 0 : _this$_component.setNativeProps == null ? void 0 : _this$_component.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component2, _this$_component$getA, _this$_component3;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component2 = this._component) != null && _this$_component2.getAnimatableRef ? (_this$_component$getA = (_this$_component3 = this._component).getAnimatableRef) == null ? void 0 : _this$_component$getA.call(_this$_component3) : this;\n        if (SHOULD_BE_USE_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new ReanimatedError('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          var viewInfo = getViewInfo(hostInstance);\n          viewTag = viewInfo.viewTag;\n          viewName = viewInfo.viewName;\n          viewConfig = viewInfo.viewConfig;\n          shadowNodeWrapper = isFabric() ? getShadowNodeWrapperFromRef(this) : null;\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this$props$animatedP2,\n          _this2 = this,\n          _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles(flattenArray(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) == null ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n        this._componentViewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && styles[0] === prevStyles[0];\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return style === prevStyle;\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (IS_JEST) {\n            _this2.jestAnimatedStyle.value = _objectSpread(_objectSpread({}, _this2.jestAnimatedStyle.value), style.initial.value);\n            style.jestAnimatedStyle.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) != null && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var _this$_NativeEventsMa3;\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        if (this.props.sharedTransitionTag !== undefined || prevProps.sharedTransitionTag !== undefined) {\n          this._configureSharedTransition();\n        }\n        (_this$_NativeEventsMa3 = this._NativeEventsManager) == null ? void 0 : _this$_NativeEventsMa3.updateEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting) {\n          saveSnapshot(this._component);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !getReducedMotionFromConfig(this.props.layout)) {\n          tryActivateLayoutTransition(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        if (IS_WEB) {\n          return;\n        }\n        var layout = this.props.layout ? maybeBuild(this.props.layout, undefined, AnimatedComponent.displayName) : undefined;\n        updateLayoutAnimations(this._componentViewTag, LayoutAnimationType.LAYOUT, layout);\n      }\n    }, {\n      key: \"_configureSharedTransition\",\n      value: function _configureSharedTransition() {\n        var _ref, _this$props$sharedTra;\n        var isUnmounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (IS_WEB) {\n          return;\n        }\n        var sharedTransitionTag = this.props.sharedTransitionTag;\n        if (!sharedTransitionTag) {\n          var _this$_sharedElementT2;\n          (_this$_sharedElementT2 = this._sharedElementTransition) == null ? void 0 : _this$_sharedElementT2.unregisterTransition(this._componentViewTag, isUnmounting);\n          this._sharedElementTransition = null;\n          return;\n        }\n        var sharedElementTransition = (_ref = (_this$props$sharedTra = this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : this._sharedElementTransition) != null ? _ref : new SharedTransition();\n        sharedElementTransition.registerTransition(this._componentViewTag, sharedTransitionTag, isUnmounting);\n        this._sharedElementTransition = sharedElementTransition;\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_component4;\n        if (IS_WEB && ((_this$_component4 = this._component) == null ? void 0 : _this$_component4.getBoundingClientRect) !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$context3;\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if (IS_JEST) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !getReducedMotionFromConfig(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = _objectSpread(_objectSpread({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}), {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        var skipEntering = (_this$context3 = this.context) == null ? void 0 : _this$context3.current;\n        var nativeID = skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n        var jestProps = IS_JEST ? {\n          jestInlineStyle: this.props.style,\n          jestAnimatedStyle: this.jestAnimatedStyle\n        } : {};\n        return _jsx(Component, _objectSpread(_objectSpread(_objectSpread({\n          nativeID: nativeID\n        }, filteredProps), jestProps), {}, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n  }(React.Component);\n  AnimatedComponent.contextType = SkipEnteringContext;\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return React.forwardRef(function (props, ref) {\n    return _jsx(AnimatedComponent, _objectSpread(_objectSpread({}, props), ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_defineProperty","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_callSuper","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","call","React","Platform","findNodeHandle","invariant","adaptViewConfig","RNRenderer","enableLayoutAnimations","SharedTransition","LayoutAnimationType","getShadowNodeWrapperFromRef","removeFromPropsRegistry","getReduceMotionFromConfig","maybeBuild","SkipEnteringContext","JSPropsUpdater","flattenArray","setAndForwardRef","isFabric","isJest","isWeb","shouldBeUseWeb","InlinePropManager","PropsFilter","startWebLayoutAnimation","tryActivateLayoutTransition","configureWebLayoutAnimations","getReducedMotionFromConfig","saveSnapshot","updateLayoutAnimations","addHTMLMutationObserver","getViewInfo","NativeEventsManager","ReanimatedError","jsx","_jsx","IS_WEB","IS_JEST","SHOULD_BE_USE_WEB","onlyAnimatedStyles","styles","style","viewDescriptors","id","createAnimatedComponent","Component","options","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","_styles","_componentViewTag","_isFirstRender","jestAnimatedStyle","value","_component","_sharedElementTransition","_jsPropsUpdater","_InlinePropManager","_PropsFilter","reanimatedID","_setComponentRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","_this$props","layout","entering","exiting","sharedTransitionTag","_this$context","_configureSharedTransition","reduceMotionInExiting","getReduceMotion","_this$props2","EXITING","displayName","skipEntering","context","current","_this$props3","ENTERING","_this$props4","key","componentDidMount","_this$_NativeEventsMa","_getComponentViewTag","_NativeEventsManager","attachEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","_configureLayoutTransition","_this$context2","visibility","componentWillUnmount","_this$_NativeEventsMa2","_this$_sharedElementT","detachEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","_this$props5","viewTag","_this$props$animatedP","remove","animatedProps","_updateFromNative","setNativeProps","_this$_component","_this$_component2","_this$_component$getA","_this$_component3","_viewInfo","undefined","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","findHostInstance_DEPRECATED","viewInfo","_this$props$animatedP2","_this2","_this$props$animatedP3","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","hasOneSameStyle","_loop","prevStyle","isPresent","some","add","initial","componentDidUpdate","prevProps","_prevState","snapshot","_this$_NativeEventsMa3","oldLayout","updateEvents","LAYOUT","_ref","_this$props$sharedTra","isUnmounting","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","registerTransition","getSnapshotBeforeUpdate","_this$_component4","getBoundingClientRect","render","_this$context3","filteredProps","filterNonAnimatedProps","_filteredProps$style","platformProps","select","web","default","collapsable","nativeID","jestProps","jestInlineStyle","contextType","forwardRef"],"sources":["f:\\Coding\\Code\\SKiddy V2\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport '../layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../core';\nimport { SharedTransition, LayoutAnimationType } from '../layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { removeFromPropsRegistry } from '../PropsRegistry';\nimport { getReduceMotionFromConfig } from '../animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../helperTypes';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n  INativeEventsManager,\n  NestedArray,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../layoutReanimation/web';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport type { ReanimatedHTMLElement } from '../js-reanimated';\nimport { ReanimatedError } from '../errors';\n\nconst IS_WEB = isWeb();\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling\n *   `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nlet id = 0;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _componentViewTag = -1;\n    _isFirstRender = true;\n    jestInlineStyle: NestedArray<StyleProps> | undefined;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _NativeEventsManager?: INativeEventsManager;\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n    reanimatedID = id++;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (IS_JEST) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n      const entering = this.props.entering;\n      if (entering && isFabric()) {\n        updateLayoutAnimations(\n          this.reanimatedID,\n          LayoutAnimationType.ENTERING,\n          maybeBuild(entering, this.props?.style, AnimatedComponent.displayName)\n        );\n      }\n    }\n\n    componentDidMount() {\n      this._componentViewTag = this._getComponentViewTag();\n      if (!IS_WEB) {\n        // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n        this._NativeEventsManager = new NativeEventsManager(this, options);\n      }\n      this._NativeEventsManager?.attachEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        const skipEntering = this.context?.current;\n\n        if (!skipEntering) {\n          startWebLayoutAnimation(\n            this.props,\n            this._component as ReanimatedHTMLElement,\n            LayoutAnimationType.ENTERING\n          );\n        } else {\n          (this._component as HTMLElement).style.visibility = 'initial';\n        }\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._NativeEventsManager?.detachEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this._componentViewTag,\n        true\n      );\n\n      const exiting = this.props.exiting;\n\n      if (\n        IS_WEB &&\n        this._component &&\n        exiting &&\n        !getReducedMotionFromConfig(exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting && !IS_WEB && !isFabric()) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._componentViewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _getComponentViewTag() {\n      return this._getViewInfo().viewTag as number;\n    }\n\n    _detachStyles() {\n      if (this._componentViewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._componentViewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(\n            this._componentViewTag\n          );\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(this._componentViewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (SHOULD_BE_USE_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new ReanimatedError(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._componentViewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (IS_JEST) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just\n           * props object with the updateProps() function where we update the\n           * properties of the component. We can't update props object directly\n           * because TestObject contains a copy of props - look at render\n           * function: const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._NativeEventsManager?.updateEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      if (IS_WEB) {\n        return;\n      }\n\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(\n        this._componentViewTag,\n        LayoutAnimationType.LAYOUT,\n        layout\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this._componentViewTag,\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this._componentViewTag,\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = findNodeHandle(ref as Component);\n\n        // callback refs are executed twice - when the component mounts with ref,\n        // and with null when it unmounts\n        if (tag !== null) {\n          this._componentViewTag = tag;\n        }\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!SHOULD_BE_USE_WEB) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n          if (exiting && isFabric()) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              updateLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering && !IS_WEB) {\n            updateLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (IS_JEST) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      const skipEntering = this.context?.current;\n      const nativeID =\n        skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n\n      const jestProps = IS_JEST\n        ? {\n            jestInlineStyle: this.props.style,\n            jestAnimatedStyle: this.jestAnimatedStyle,\n          }\n        : {};\n\n      return (\n        <Component\n          nativeID={nativeID}\n          {...filteredProps}\n          {...jestProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}