{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext({\n  isAuthenticated: false,\n  user: null,\n  login: function () {\n    var _login = _asyncToGenerator(function* () {});\n    function login() {\n      return _login.apply(this, arguments);\n    }\n    return login;\n  }(),\n  logout: function () {\n    var _logout = _asyncToGenerator(function* () {});\n    function logout() {\n      return _logout.apply(this, arguments);\n    }\n    return logout;\n  }(),\n  isLoading: true\n});\nexport var useAuth = function useAuth() {\n  return useContext(AuthContext);\n};\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isLoading = _useState6[0],\n    setIsLoading = _useState6[1];\n  useEffect(function () {\n    var loadStoredAuth = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var storedUser = yield AsyncStorage.getItem('user');\n          var storedAuth = yield AsyncStorage.getItem('isAuthenticated');\n          if (storedUser && storedAuth === 'true') {\n            setUser(JSON.parse(storedUser));\n            setIsAuthenticated(true);\n          }\n        } catch (error) {\n          console.error('Error loading stored auth:', error);\n        } finally {\n          setIsLoading(false);\n        }\n      });\n      return function loadStoredAuth() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadStoredAuth();\n  }, []);\n  var login = function () {\n    var _ref3 = _asyncToGenerator(function* (email, password) {\n      try {\n        var mockUser = {\n          id: '1',\n          email: email,\n          name: 'John Doe',\n          avatar: 'JD'\n        };\n        yield AsyncStorage.setItem('user', JSON.stringify(mockUser));\n        yield AsyncStorage.setItem('isAuthenticated', 'true');\n        setUser(mockUser);\n        setIsAuthenticated(true);\n      } catch (error) {\n        console.error('Login failed:', error);\n        throw new Error('Login failed');\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var logout = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 500);\n        });\n        yield AsyncStorage.removeItem('user');\n        yield AsyncStorage.removeItem('isAuthenticated');\n        setUser(null);\n        setIsAuthenticated(false);\n      } catch (error) {\n        console.error('Logout failed:', error);\n        throw new Error('Logout failed');\n      }\n    });\n    return function logout() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  if (isLoading) {\n    return null;\n  }\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      user: user,\n      login: login,\n      logout: logout,\n      isLoading: isLoading\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","AsyncStorage","jsx","_jsx","AuthContext","isAuthenticated","user","login","_login","_asyncToGenerator","apply","arguments","logout","_logout","isLoading","useAuth","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","setIsAuthenticated","_useState3","_useState4","setUser","_useState5","_useState6","setIsLoading","loadStoredAuth","_ref2","storedUser","getItem","storedAuth","JSON","parse","error","console","_ref3","email","password","mockUser","id","name","avatar","setItem","stringify","Error","_x","_x2","_ref4","Promise","resolve","setTimeout","removeItem","Provider","value"],"sources":["f:/Coding/Code/SKiddy V2/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\ninterface User {\n  id: string;\n  email: string;\n  name: string;\n  avatar: string;\n}\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  isLoading: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType>({\n  isAuthenticated: false,\n  user: null,\n  login: async () => {},\n  logout: async () => {},\n  isLoading: true,\n});\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load stored authentication state on startup\n  useEffect(() => {\n    const loadStoredAuth = async () => {\n      try {\n        const storedUser = await AsyncStorage.getItem('user');\n        const storedAuth = await AsyncStorage.getItem('isAuthenticated');\n        \n        if (storedUser && storedAuth === 'true') {\n          setUser(JSON.parse(storedUser));\n          setIsAuthenticated(true);\n        }\n      } catch (error) {\n        console.error('Error loading stored auth:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadStoredAuth();\n  }, []);\n\n  const login = async (email: string, password: string) => {\n    try {\n      // TODO: Implement actual authentication logic here\n      // For now, just simulate a successful login\n      const mockUser = {\n        id: '1',\n        email,\n        name: 'John Doe',\n        avatar: 'JD',\n      };\n      \n      // Store authentication state\n      await AsyncStorage.setItem('user', JSON.stringify(mockUser));\n      await AsyncStorage.setItem('isAuthenticated', 'true');\n\n      setUser(mockUser);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // TODO: Replace with actual API call\n      await new Promise(resolve => setTimeout(resolve, 500)); // Simulate API call\n\n      // Clear stored authentication state\n      await AsyncStorage.removeItem('user');\n      await AsyncStorage.removeItem('isAuthenticated');\n\n      setUser(null);\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.error('Logout failed:', error);\n      throw new Error('Logout failed');\n    }\n  };\n\n  if (isLoading) {\n    // You might want to show a loading spinner here\n    return null;\n  }\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}