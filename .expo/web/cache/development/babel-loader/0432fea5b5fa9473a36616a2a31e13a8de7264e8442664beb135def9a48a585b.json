{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from \"./src/screens/HomeScreen\";\nimport { CoursePlayerScreen } from \"./src/screens/CoursePlayerScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var _useState = useState('home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRoute = _useState2[0],\n    setCurrentRoute = _useState2[1];\n  return _jsx(GestureHandlerRootView, {\n    style: styles.container,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(View, {\n          style: styles.appContainer,\n          children: [_jsx(Header, {}), _jsxs(View, {\n            style: styles.mainLayout,\n            children: [!isMobile && _jsx(Sidebar, {\n              currentRoute: currentRoute,\n              navigation: {\n                navigate: function navigate(route) {\n                  return setCurrentRoute(route);\n                }\n              }\n            }), _jsx(View, {\n              style: styles.content,\n              children: _jsxs(Stack.Navigator, {\n                screenOptions: {\n                  headerShown: false,\n                  animation: Platform.OS === 'web' ? 'none' : 'default'\n                },\n                children: [_jsx(Stack.Screen, {\n                  name: \"Home\",\n                  component: HomeScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"CoursePlayer\",\n                  component: CoursePlayerScreen\n                })]\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB'\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","createNativeStackNavigator","View","StyleSheet","Platform","useWindowDimensions","SafeAreaProvider","GestureHandlerRootView","HomeScreen","CoursePlayerScreen","Sidebar","Header","jsx","_jsx","jsxs","_jsxs","Stack","App","_useWindowDimensions","width","isMobile","_useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","style","styles","container","children","appContainer","mainLayout","navigation","navigate","route","content","Navigator","screenOptions","headerShown","animation","OS","Screen","name","component","create","flex","backgroundColor","flexDirection"],"sources":["d:/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from './src/screens/HomeScreen';\nimport { CoursePlayerScreen } from './src/screens/CoursePlayerScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n  const [currentRoute, setCurrentRoute] = useState('home');\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <View style={styles.appContainer}>\n            <Header />\n            <View style={styles.mainLayout}>\n              {!isMobile && (\n                <Sidebar \n                  currentRoute={currentRoute}\n                  navigation={{ navigate: (route: string) => setCurrentRoute(route) }}\n                />\n              )}\n              <View style={styles.content}>\n                <Stack.Navigator\n                  screenOptions={{\n                    headerShown: false,\n                    animation: Platform.OS === 'web' ? 'none' : 'default',\n                  }}\n                >\n                  <Stack.Screen name=\"Home\" component={HomeScreen} />\n                  <Stack.Screen name=\"CoursePlayer\" component={CoursePlayerScreen} />\n                </Stack.Navigator>\n              </View>\n            </View>\n          </View>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,mBAAA;AAE5E,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,UAAU;AACnB,SAASC,kBAAkB;AAC3B,SAASC,OAAO;AAChB,SAASC,MAAM;AAAyC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,KAAK,GAAGf,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASgB,GAAGA,CAAA,EAAG;EAC5B,IAAAC,oBAAA,GAAkBb,mBAAmB,CAAC,CAAC;IAA/Bc,KAAK,GAAAD,oBAAA,CAALC,KAAK;EACb,IAAMC,QAAQ,GAAGD,KAAK,GAAG,GAAG;EAC5B,IAAAE,SAAA,GAAwCtB,QAAQ,CAAC,MAAM,CAAC;IAAAuB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpC,OACET,IAAA,CAACN,sBAAsB;IAACmB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC9ChB,IAAA,CAACP,gBAAgB;MAAAuB,QAAA,EACfhB,IAAA,CAACb,mBAAmB;QAAA6B,QAAA,EAClBd,KAAA,CAACb,IAAI;UAACwB,KAAK,EAAEC,MAAM,CAACG,YAAa;UAAAD,QAAA,GAC/BhB,IAAA,CAACF,MAAM,IAAE,CAAC,EACVI,KAAA,CAACb,IAAI;YAACwB,KAAK,EAAEC,MAAM,CAACI,UAAW;YAAAF,QAAA,GAC5B,CAACT,QAAQ,IACRP,IAAA,CAACH,OAAO;cACNc,YAAY,EAAEA,YAAa;cAC3BQ,UAAU,EAAE;gBAAEC,QAAQ,EAAE,SAAVA,QAAQA,CAAGC,KAAa;kBAAA,OAAKT,eAAe,CAACS,KAAK,CAAC;gBAAA;cAAC;YAAE,CACrE,CACF,EACDrB,IAAA,CAACX,IAAI;cAACwB,KAAK,EAAEC,MAAM,CAACQ,OAAQ;cAAAN,QAAA,EAC1Bd,KAAA,CAACC,KAAK,CAACoB,SAAS;gBACdC,aAAa,EAAE;kBACbC,WAAW,EAAE,KAAK;kBAClBC,SAAS,EAAEnC,QAAQ,CAACoC,EAAE,KAAK,KAAK,GAAG,MAAM,GAAG;gBAC9C,CAAE;gBAAAX,QAAA,GAEFhB,IAAA,CAACG,KAAK,CAACyB,MAAM;kBAACC,IAAI,EAAC,MAAM;kBAACC,SAAS,EAAEnC;gBAAW,CAAE,CAAC,EACnDK,IAAA,CAACG,KAAK,CAACyB,MAAM;kBAACC,IAAI,EAAC,cAAc;kBAACC,SAAS,EAAElC;gBAAmB,CAAE,CAAC;cAAA,CACpD;YAAC,CACd,CAAC;UAAA,CACH,CAAC;QAAA,CACH;MAAC,CACY;IAAC,CACN;EAAC,CACG,CAAC;AAE7B;AAEA,IAAMkB,MAAM,GAAGxB,UAAU,CAACyC,MAAM,CAAC;EAC/BhB,SAAS,EAAE;IACTiB,IAAI,EAAE;EACR,CAAC;EACDf,YAAY,EAAE;IACZe,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDf,UAAU,EAAE;IACVc,IAAI,EAAE,CAAC;IACPE,aAAa,EAAE;EACjB,CAAC;EACDZ,OAAO,EAAE;IACPU,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}