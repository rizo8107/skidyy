{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from \"./src/screens/MyCoursesScreen\";\nimport { SavedCoursesScreen } from \"./src/screens/SavedCoursesScreen\";\nimport { SettingsScreen } from \"./src/screens/SettingsScreen\";\nimport { HelpScreen } from \"./src/screens/HelpScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var isMobile = width < 768;\n  var _useState = useState('/my-courses'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentRoute = _useState2[0],\n    setCurrentRoute = _useState2[1];\n  var navigationRef = useNavigationContainerRef();\n  var handleNavigation = function handleNavigation(route) {\n    var screenName = route.replace('/', '').split('-').map(function (word) {\n      return word.charAt(0).toUpperCase() + word.slice(1);\n    }).join('');\n    navigationRef.navigate(screenName);\n  };\n  return _jsx(GestureHandlerRootView, {\n    style: styles.container,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        ref: navigationRef,\n        onStateChange: function onStateChange(state) {\n          if (state) {\n            var currentScreen = state.routes[state.index].name;\n            setCurrentRoute('/' + currentScreen.toLowerCase().replace(/([A-Z])/g, '-$1').toLowerCase());\n          }\n        },\n        children: _jsxs(View, {\n          style: styles.appContainer,\n          children: [_jsx(Header, {}), _jsxs(View, {\n            style: styles.mainLayout,\n            children: [!isMobile && _jsx(Sidebar, {\n              navigation: {\n                navigate: handleNavigation\n              },\n              currentRoute: currentRoute\n            }), _jsx(View, {\n              style: styles.content,\n              children: _jsxs(Stack.Navigator, {\n                screenOptions: {\n                  headerShown: false,\n                  animation: Platform.OS === 'web' ? 'none' : 'default'\n                },\n                children: [_jsx(Stack.Screen, {\n                  name: \"MyCourses\",\n                  component: MyCoursesScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"SavedCourses\",\n                  component: SavedCoursesScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"Settings\",\n                  component: SettingsScreen\n                }), _jsx(Stack.Screen, {\n                  name: \"Help\",\n                  component: HelpScreen\n                })]\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB'\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  content: {\n    flex: 1\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB'\n  }\n});","map":{"version":3,"names":["React","useState","NavigationContainer","useNavigationContainerRef","createNativeStackNavigator","View","StyleSheet","Platform","useWindowDimensions","SafeAreaProvider","GestureHandlerRootView","MyCoursesScreen","SavedCoursesScreen","SettingsScreen","HelpScreen","Sidebar","Header","jsx","_jsx","jsxs","_jsxs","Stack","App","_useWindowDimensions","width","isMobile","_useState","_useState2","_slicedToArray","currentRoute","setCurrentRoute","navigationRef","handleNavigation","route","screenName","replace","split","map","word","charAt","toUpperCase","slice","join","navigate","style","styles","container","children","ref","onStateChange","state","currentScreen","routes","index","name","toLowerCase","appContainer","mainLayout","navigation","content","Navigator","screenOptions","headerShown","animation","OS","Screen","component","create","flex","backgroundColor","flexDirection","screenContent"],"sources":["d:/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { NavigationContainer, useNavigationContainerRef } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet, Platform, useWindowDimensions } from 'react-native';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { MyCoursesScreen } from './src/screens/MyCoursesScreen';\nimport { SavedCoursesScreen } from './src/screens/SavedCoursesScreen';\nimport { SavedScreen } from './src/screens/SavedScreen';\nimport { SettingsScreen } from './src/screens/SettingsScreen';\nimport { HelpScreen } from './src/screens/HelpScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const { width } = useWindowDimensions();\n  const isMobile = width < 768;\n  const [currentRoute, setCurrentRoute] = useState('/my-courses');\n  const navigationRef = useNavigationContainerRef();\n\n  const handleNavigation = (route: string) => {\n    const screenName = route.replace('/', '').split('-').map(\n      word => word.charAt(0).toUpperCase() + word.slice(1)\n    ).join('');\n    navigationRef.navigate(screenName);\n  };\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <SafeAreaProvider>\n        <NavigationContainer\n          ref={navigationRef}\n          onStateChange={(state) => {\n            if (state) {\n              const currentScreen = state.routes[state.index].name;\n              setCurrentRoute('/' + currentScreen.toLowerCase().replace(/([A-Z])/g, '-$1').toLowerCase());\n            }\n          }}\n        >\n          <View style={styles.appContainer}>\n            <Header />\n            <View style={styles.mainLayout}>\n              {!isMobile && (\n                <Sidebar \n                  navigation={{ navigate: handleNavigation }}\n                  currentRoute={currentRoute}\n                />\n              )}\n              <View style={styles.content}>\n                <Stack.Navigator\n                  screenOptions={{\n                    headerShown: false,\n                    animation: Platform.OS === 'web' ? 'none' : 'default',\n                  }}\n                >\n                  <Stack.Screen name=\"MyCourses\" component={MyCoursesScreen} />\n                  <Stack.Screen name=\"SavedCourses\" component={SavedCoursesScreen} />\n                  <Stack.Screen name=\"Settings\" component={SettingsScreen} />\n                  <Stack.Screen name=\"Help\" component={HelpScreen} />\n                </Stack.Navigator>\n              </View>\n            </View>\n          </View>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  content: {\n    flex: 1,\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}