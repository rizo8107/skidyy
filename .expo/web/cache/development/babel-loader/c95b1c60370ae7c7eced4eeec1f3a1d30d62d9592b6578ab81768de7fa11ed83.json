{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from \"./src/screens/HomeScreen\";\nimport { Sidebar } from \"./src/components/layout/Sidebar\";\nimport { Header } from \"./src/components/layout/Header\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(GestureHandlerRootView, {\n    style: styles.container,\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(View, {\n          style: styles.appContainer,\n          children: [_jsx(Header, {}), _jsxs(View, {\n            style: styles.mainLayout,\n            children: [_jsx(Sidebar, {}), _jsx(View, {\n              style: styles.content,\n              children: _jsx(Stack.Navigator, {\n                screenOptions: {\n                  headerShown: false,\n                  contentStyle: styles.screenContent\n                },\n                children: _jsx(Stack.Screen, {\n                  name: \"Home\",\n                  component: HomeScreen\n                })\n              })\n            })]\n          })]\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB'\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#F9FAFB'\n  },\n  content: {\n    flex: 1,\n    backgroundColor: '#F9FAFB'\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB'\n  }\n});","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","View","StyleSheet","SafeAreaProvider","GestureHandlerRootView","HomeScreen","Sidebar","Header","jsx","_jsx","jsxs","_jsxs","Stack","App","style","styles","container","children","appContainer","mainLayout","content","Navigator","screenOptions","headerShown","contentStyle","screenContent","Screen","name","component","create","flex","backgroundColor","flexDirection"],"sources":["d:/Code/SKiddy V2/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { HomeScreen } from './src/screens/HomeScreen';\nimport { Sidebar } from './src/components/layout/Sidebar';\nimport { Header } from './src/components/layout/Header';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <View style={styles.appContainer}>\n            <Header />\n            <View style={styles.mainLayout}>\n              <Sidebar />\n              <View style={styles.content}>\n                <Stack.Navigator\n                  screenOptions={{\n                    headerShown: false,\n                    contentStyle: styles.screenContent,\n                  }}\n                >\n                  <Stack.Screen name=\"Home\" component={HomeScreen} />\n                  {/* Add more screens here */}\n                </Stack.Navigator>\n              </View>\n            </View>\n          </View>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  appContainer: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  mainLayout: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#F9FAFB',\n  },\n  content: {\n    flex: 1,\n    backgroundColor: '#F9FAFB',\n  },\n  screenContent: {\n    backgroundColor: '#F9FAFB',\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE5E,SAASC,gBAAgB,QAAsB,gCAAgC;AAC/E,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,SAASC,UAAU;AACnB,SAASC,OAAO;AAChB,SAASC,MAAM;AAAyC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAExD,IAAMC,KAAK,GAAGZ,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACL,sBAAsB;IAACU,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC9CR,IAAA,CAACN,gBAAgB;MAAAc,QAAA,EACfR,IAAA,CAACV,mBAAmB;QAAAkB,QAAA,EAClBN,KAAA,CAACV,IAAI;UAACa,KAAK,EAAEC,MAAM,CAACG,YAAa;UAAAD,QAAA,GAC/BR,IAAA,CAACF,MAAM,IAAE,CAAC,EACVI,KAAA,CAACV,IAAI;YAACa,KAAK,EAAEC,MAAM,CAACI,UAAW;YAAAF,QAAA,GAC7BR,IAAA,CAACH,OAAO,IAAE,CAAC,EACXG,IAAA,CAACR,IAAI;cAACa,KAAK,EAAEC,MAAM,CAACK,OAAQ;cAAAH,QAAA,EAC1BR,IAAA,CAACG,KAAK,CAACS,SAAS;gBACdC,aAAa,EAAE;kBACbC,WAAW,EAAE,KAAK;kBAClBC,YAAY,EAAET,MAAM,CAACU;gBACvB,CAAE;gBAAAR,QAAA,EAEFR,IAAA,CAACG,KAAK,CAACc,MAAM;kBAACC,IAAI,EAAC,MAAM;kBAACC,SAAS,EAAEvB;gBAAW,CAAE;cAAC,CAEpC;YAAC,CACd,CAAC;UAAA,CACH,CAAC;QAAA,CACH;MAAC,CACY;IAAC,CACN;EAAC,CACG,CAAC;AAE7B;AAEA,IAAMU,MAAM,GAAGb,UAAU,CAAC2B,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE;EACR,CAAC;EACDZ,YAAY,EAAE;IACZY,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDZ,UAAU,EAAE;IACVW,IAAI,EAAE,CAAC;IACPE,aAAa,EAAE,KAAK;IACpBD,eAAe,EAAE;EACnB,CAAC;EACDX,OAAO,EAAE;IACPU,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE;EACnB,CAAC;EACDN,aAAa,EAAE;IACbM,eAAe,EAAE;EACnB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}