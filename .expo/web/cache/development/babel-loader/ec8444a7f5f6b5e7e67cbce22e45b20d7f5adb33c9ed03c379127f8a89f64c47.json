{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var VideoPlayer = function VideoPlayer(_ref) {\n  var videoId = _ref.videoId,\n    accessToken = _ref.accessToken,\n    onComplete = _ref.onComplete,\n    onProgress = _ref.onProgress,\n    onTimeUpdate = _ref.onTimeUpdate,\n    _ref$initialProgress = _ref.initialProgress,\n    initialProgress = _ref$initialProgress === void 0 ? 0 : _ref$initialProgress;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFullscreen = _useState2[0],\n    setIsFullscreen = _useState2[1];\n  var embedUrl = `https://app.tpstreams.com/embed/6u448b/${videoId}/?access_token=${accessToken}`;\n  return _jsx(View, {\n    style: [styles.container, isFullscreen && styles.fullscreen],\n    children: _jsx(\"iframe\", {\n      src: embedUrl,\n      style: {\n        border: 'none',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'black'\n      },\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    aspectRatio: 16 / 9\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","jsx","_jsx","VideoPlayer","_ref","videoId","accessToken","onComplete","onProgress","onTimeUpdate","_ref$initialProgress","initialProgress","_useState","_useState2","_slicedToArray","isFullscreen","setIsFullscreen","embedUrl","style","styles","container","fullscreen","children","src","border","width","height","backgroundColor","allow","allowFullScreen","create","flex","borderRadius","overflow","aspectRatio","position","top","left","right","bottom","zIndex"],"sources":["d:/Code/SKiddy V2/src/components/video/VideoPlayer.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, StyleSheet, Platform } from 'react-native';\nimport { WebView } from 'expo-web-browser';\n\ninterface VideoPlayerProps {\n  videoId: string;\n  accessToken: string;\n  onComplete?: () => void;\n  onProgress?: (progress: number) => void;\n  onTimeUpdate?: (time: number) => void;\n  initialProgress?: number;\n}\n\nexport const VideoPlayer = ({\n  videoId,\n  accessToken,\n  onComplete,\n  onProgress,\n  onTimeUpdate,\n  initialProgress = 0,\n}: VideoPlayerProps) => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const embedUrl = `https://app.tpstreams.com/embed/6u448b/${videoId}/?access_token=${accessToken}`;\n\n  return (\n    <View style={[styles.container, isFullscreen && styles.fullscreen]}>\n      <iframe\n        src={embedUrl}\n        style={{\n          border: 'none',\n          width: '100%',\n          height: '100%',\n          backgroundColor: 'black',\n        }}\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    borderRadius: 12,\n    overflow: 'hidden',\n    aspectRatio: 16 / 9,\n  },\n  fullscreen: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: 999,\n  },\n});\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAgB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAahD,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAOA;EAAA,IANtBC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,WAAW,GAAAF,IAAA,CAAXE,WAAW;IACXC,UAAU,GAAAH,IAAA,CAAVG,UAAU;IACVC,UAAU,GAAAJ,IAAA,CAAVI,UAAU;IACVC,YAAY,GAAAL,IAAA,CAAZK,YAAY;IAAAC,oBAAA,GAAAN,IAAA,CACZO,eAAe;IAAfA,eAAe,GAAAD,oBAAA,cAAG,CAAC,GAAAA,oBAAA;EAEnB,IAAAE,SAAA,GAAwCd,QAAQ,CAAC,KAAK,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAMI,QAAQ,GAAG,0CAA0CZ,OAAO,kBAAkBC,WAAW,EAAE;EAEjG,OACEJ,IAAA,CAACH,IAAI;IAACmB,KAAK,EAAE,CAACC,MAAM,CAACC,SAAS,EAAEL,YAAY,IAAII,MAAM,CAACE,UAAU,CAAE;IAAAC,QAAA,EACjEpB,IAAA;MACEqB,GAAG,EAAEN,QAAS;MACdC,KAAK,EAAE;QACLM,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,eAAe,EAAE;MACnB,CAAE;MACFC,KAAK,EAAC,0FAA0F;MAChGC,eAAe;IAAA,CAChB;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMV,MAAM,GAAGnB,UAAU,CAAC8B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPJ,eAAe,EAAE,MAAM;IACvBK,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,WAAW,EAAE,EAAE,GAAG;EACpB,CAAC;EACDb,UAAU,EAAE;IACVc,QAAQ,EAAE,UAAU;IACpBC,GAAG,EAAE,CAAC;IACNC,IAAI,EAAE,CAAC;IACPC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}