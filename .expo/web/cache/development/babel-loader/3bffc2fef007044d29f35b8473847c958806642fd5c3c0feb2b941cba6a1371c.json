{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AuthContext = createContext(undefined);\nexport var AuthProvider = function AuthProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isAuthenticated = _useState2[0],\n    setIsAuthenticated = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n  var login = function () {\n    var _ref2 = _asyncToGenerator(function* (email, password) {\n      try {\n        var mockUser = {\n          id: '1',\n          email: email,\n          name: 'John Doe',\n          avatar: 'JD'\n        };\n        setUser(mockUser);\n        setIsAuthenticated(true);\n      } catch (error) {\n        throw new Error('Login failed');\n      }\n    });\n    return function login(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var logout = function logout() {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  return _jsx(AuthContext.Provider, {\n    value: {\n      isAuthenticated: isAuthenticated,\n      user: user,\n      login: login,\n      logout: logout\n    },\n    children: children\n  });\n};\nexport var useAuth = function useAuth() {\n  var context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","map":{"version":3,"names":["React","createContext","useState","useContext","jsx","_jsx","AuthContext","undefined","AuthProvider","_ref","children","_useState","_useState2","_slicedToArray","isAuthenticated","setIsAuthenticated","_useState3","_useState4","user","setUser","login","_ref2","_asyncToGenerator","email","password","mockUser","id","name","avatar","error","Error","_x","_x2","apply","arguments","logout","Provider","value","useAuth","context"],"sources":["f:/Coding/Code/SKiddy V2/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  user: any | null;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n\n  const login = async (email: string, password: string) => {\n    try {\n      // TODO: Implement actual authentication logic here\n      // For now, just simulate a successful login\n      const mockUser = {\n        id: '1',\n        email,\n        name: 'John Doe',\n        avatar: 'JD',\n      };\n      \n      setUser(mockUser);\n      setIsAuthenticated(true);\n    } catch (error) {\n      throw new Error('Login failed');\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AASnE,IAAMC,WAAW,GAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACrC,IAAAC,SAAA,GAA8CT,QAAQ,CAAC,KAAK,CAAC;IAAAU,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAtDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAC1C,IAAAI,UAAA,GAAwBd,QAAQ,CAAC,IAAI,CAAC;IAAAe,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EAEpB,IAAMG,KAAK;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAa,EAAEC,QAAgB,EAAK;MACvD,IAAI;QAGF,IAAMC,QAAQ,GAAG;UACfC,EAAE,EAAE,GAAG;UACPH,KAAK,EAALA,KAAK;UACLI,IAAI,EAAE,UAAU;UAChBC,MAAM,EAAE;QACV,CAAC;QAEDT,OAAO,CAACM,QAAQ,CAAC;QACjBV,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOc,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;MACjC;IACF,CAAC;IAAA,gBAhBKV,KAAKA,CAAAW,EAAA,EAAAC,GAAA;MAAA,OAAAX,KAAA,CAAAY,KAAA,OAAAC,SAAA;IAAA;EAAA,GAgBV;EAED,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBhB,OAAO,CAAC,IAAI,CAAC;IACbJ,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,OACEV,IAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACC,KAAK,EAAE;MAAEvB,eAAe,EAAfA,eAAe;MAAEI,IAAI,EAAJA,IAAI;MAAEE,KAAK,EAALA,KAAK;MAAEe,MAAM,EAANA;IAAO,CAAE;IAAAzB,QAAA,EACnEA;EAAQ,CACW,CAAC;AAE3B,CAAC;AAED,OAAO,IAAM4B,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAC3B,IAAMC,OAAO,GAAGpC,UAAU,CAACG,WAAW,CAAC;EACvC,IAAIiC,OAAO,KAAKhC,SAAS,EAAE;IACzB,MAAM,IAAIuB,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOS,OAAO;AAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}