{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { flattenArray } from \"./utils.js\";\nimport { makeViewDescriptorsSet } from \"../ViewDescriptorsSet.js\";\nimport { adaptViewConfig } from \"../ConfigHelper.js\";\nimport updateProps from \"../UpdateProps.js\";\nimport { stopMapper, startMapper } from \"../mappers.js\";\nimport { isSharedValue } from \"../isSharedValue.js\";\nfunction isInlineStyleTransform(transform) {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) {\n      return true;\n    }\n  }\n  return false;\n}\nvar _worklet_9335099418326_init_data = {\n  code: \"function getInlinePropsUpdate_InlinePropManagerJs1(inlineProps){const getInlinePropsUpdate_InlinePropManagerJs1=this._recur;const{isSharedValue}=this.__closure;const update={};for(const[key,styleValue]of Object.entries(inlineProps)){if(isSharedValue(styleValue)){update[key]=styleValue.value;}else if(Array.isArray(styleValue)){update[key]=styleValue.map(function(item){return getInlinePropsUpdate_InlinePropManagerJs1(item);});}else if(typeof styleValue==='object'){update[key]=getInlinePropsUpdate_InlinePropManagerJs1(styleValue);}else{update[key]=styleValue;}}return update;}\",\n  location: \"f:\\\\Coding\\\\Code\\\\SKiddy V2\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\createAnimatedComponent\\\\InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getInlinePropsUpdate_InlinePropManagerJs1\\\",\\\"inlineProps\\\",\\\"_recur\\\",\\\"isSharedValue\\\",\\\"__closure\\\",\\\"update\\\",\\\"key\\\",\\\"styleValue\\\",\\\"Object\\\",\\\"entries\\\",\\\"value\\\",\\\"Array\\\",\\\"isArray\\\",\\\"map\\\",\\\"item\\\"],\\\"sources\\\":[\\\"f:/Coding/Code/SKiddy V2/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AAyBA,SAAAA,yCAA2CA,CAAAC,WAAA,QAAAD,yCAAA,MAAAE,MAAA,OAAAC,aAAA,OAAAC,SAAA,CAGzC,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CACjB,IAAK,KAAM,CAACC,GAAG,CAAEC,UAAU,CAAC,EAAI,CAAAC,MAAM,CAACC,OAAO,CAACR,WAAW,CAAC,CAAE,CAC3D,GAAIE,aAAa,CAACI,UAAU,CAAC,CAAE,CAC7BF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACG,KAAK,CAChC,CAAC,IAAM,IAAIC,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,CAAE,CACpCF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAACM,GAAG,CAAC,SAAAC,IAAI,CAAI,CACnC,MAAO,CAAAd,yCAA0B,CAAAc,IAAA,EACnC,CAAC,CAAC,CACJ,CAAC,IAAM,IAAI,MAAO,CAAAP,UAAU,GAAK,QAAQ,CAAE,CACzCF,MAAM,CAACC,GAAG,CAAC,CAAGN,yCAAgC,CAAAO,UAAA,EAChD,CAAC,IAAM,CACLF,MAAM,CAACC,GAAG,CAAC,CAAGC,UAAU,CAC1B,CACF,CACA,MAAO,CAAAF,MAAM,CACf\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.2\"\n};\nvar getInlinePropsUpdate = function () {\n  var _e = [new global.Error(), -2, -27];\n  var _getInlinePropsUpdate = function getInlinePropsUpdate(inlineProps) {\n    var update = {};\n    for (var _ref of Object.entries(inlineProps)) {\n      var _ref2 = _slicedToArray(_ref, 2);\n      var key = _ref2[0];\n      var styleValue = _ref2[1];\n      if (isSharedValue(styleValue)) {\n        update[key] = styleValue.value;\n      } else if (Array.isArray(styleValue)) {\n        update[key] = styleValue.map(function (item) {\n          return _getInlinePropsUpdate(item);\n        });\n      } else if (typeof styleValue === 'object') {\n        update[key] = _getInlinePropsUpdate(styleValue);\n      } else {\n        update[key] = styleValue;\n      }\n    }\n    return update;\n  };\n  _getInlinePropsUpdate.__closure = {\n    isSharedValue: isSharedValue\n  };\n  _getInlinePropsUpdate.__workletHash = 9335099418326;\n  _getInlinePropsUpdate.__initData = _worklet_9335099418326_init_data;\n  _getInlinePropsUpdate.__stackDetails = _e;\n  return _getInlinePropsUpdate;\n}();\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = flattenArray((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref3 of Object.entries(style)) {\n          var _ref4 = _slicedToArray(_ref3, 2);\n          var styleKey = _ref4[0];\n          var styleValue = _ref4[1];\n          if (isSharedValue(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          } else if (styleKey === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nexport function hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return isSharedValue(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nexport function getInlineStyle(style, isFirstRender) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  var newStyle = {};\n  for (var _ref5 of Object.entries(style)) {\n    var _ref6 = _slicedToArray(_ref5, 2);\n    var key = _ref6[0];\n    var styleValue = _ref6[1];\n    if (!isSharedValue(styleValue) && !(key === 'transform' && isInlineStyleTransform(styleValue))) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\nvar _worklet_6022199038282_init_data = {\n  code: \"function InlinePropManagerJs2(){const{getInlinePropsUpdate,newInlineProps,updateProps,shareableViewDescriptors}=this.__closure;const update=getInlinePropsUpdate(newInlineProps);updateProps(shareableViewDescriptors,update);}\",\n  location: \"f:\\\\Coding\\\\Code\\\\SKiddy V2\\\\node_modules\\\\react-native-reanimated\\\\lib\\\\module\\\\createAnimatedComponent\\\\InlinePropManager.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"InlinePropManagerJs2\\\",\\\"getInlinePropsUpdate\\\",\\\"newInlineProps\\\",\\\"updateProps\\\",\\\"shareableViewDescriptors\\\",\\\"__closure\\\",\\\"update\\\"],\\\"sources\\\":[\\\"f:/Coding/Code/SKiddy V2/node_modules/react-native-reanimated/lib/module/createAnimatedComponent/InlinePropManager.js\\\"],\\\"mappings\\\":\\\"AAmH8B,SAAAA,oBAAMA,CAAA,QAAAC,oBAAA,CAAAC,cAAA,CAAAC,WAAA,CAAAC,wBAAA,OAAAC,SAAA,CAG5B,KAAM,CAAAC,MAAM,CAAGL,oBAAoB,CAACC,cAAc,CAAC,CACnDC,WAAW,CAACC,wBAAwB,CAAEE,MAAM,CAAC,CAC/C\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.16.2\"\n};\nexport var InlinePropManager = function () {\n  function InlinePropManager() {\n    _classCallCheck(this, InlinePropManager);\n    this._inlinePropsViewDescriptors = null;\n    this._inlinePropsMapperId = null;\n    this._inlineProps = {};\n  }\n  return _createClass(InlinePropManager, [{\n    key: \"attachInlineProps\",\n    value: function attachInlineProps(animatedComponent, viewInfo) {\n      var newInlineProps = extractSharedValuesMapFromProps(animatedComponent.props);\n      var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n          var viewTag = viewInfo.viewTag,\n            viewName = viewInfo.viewName,\n            shadowNodeWrapper = viewInfo.shadowNodeWrapper,\n            viewConfig = viewInfo.viewConfig;\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            adaptViewConfig(viewConfig);\n          }\n          this._inlinePropsViewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n        var shareableViewDescriptors = this._inlinePropsViewDescriptors.shareableViewDescriptors;\n        var updaterFunction = function () {\n          var _e = [new global.Error(), -5, -27];\n          var InlinePropManagerJs2 = function InlinePropManagerJs2() {\n            var update = getInlinePropsUpdate(newInlineProps);\n            updateProps(shareableViewDescriptors, update);\n          };\n          InlinePropManagerJs2.__closure = {\n            getInlinePropsUpdate: getInlinePropsUpdate,\n            newInlineProps: newInlineProps,\n            updateProps: updateProps,\n            shareableViewDescriptors: shareableViewDescriptors\n          };\n          InlinePropManagerJs2.__workletHash = 6022199038282;\n          InlinePropManagerJs2.__initData = _worklet_6022199038282_init_data;\n          InlinePropManagerJs2.__stackDetails = _e;\n          return InlinePropManagerJs2;\n        }();\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          stopMapper(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = startMapper(updaterFunction, Object.values(newInlineProps));\n        }\n      }\n    }\n  }, {\n    key: \"detachInlineProps\",\n    value: function detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["_classCallCheck","_createClass","_slicedToArray","flattenArray","makeViewDescriptorsSet","adaptViewConfig","updateProps","stopMapper","startMapper","isSharedValue","isInlineStyleTransform","transform","Array","isArray","some","t","hasInlineStyles","inlinePropsHasChanged","styles1","styles2","Object","keys","length","key","_worklet_9335099418326_init_data","code","location","sourceMap","version","getInlinePropsUpdate","_e","global","Error","_getInlinePropsUpdate","inlineProps","update","_ref","entries","_ref2","styleValue","value","map","item","__closure","__workletHash","__initData","__stackDetails","extractSharedValuesMapFromProps","props","_props$style","styles","style","forEach","_ref3","_ref4","styleKey","getInlineStyle","isFirstRender","newStyle","_ref5","_ref6","_worklet_6022199038282_init_data","InlinePropManager","_inlinePropsViewDescriptors","_inlinePropsMapperId","_inlineProps","attachInlineProps","animatedComponent","viewInfo","newInlineProps","hasChanged","viewTag","viewName","shadowNodeWrapper","viewConfig","add","tag","name","shareableViewDescriptors","updaterFunction","InlinePropManagerJs2","values","detachInlineProps"],"sources":["f:\\Coding\\Code\\SKiddy V2\\node_modules\\react-native-reanimated\\src\\createAnimatedComponent\\InlinePropManager.ts"],"sourcesContent":["'use strict';\nimport type { StyleProps } from '../commonTypes';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport type { ViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../UpdateProps';\nimport { stopMapper, startMapper } from '../mappers';\nimport { isSharedValue } from '../isSharedValue';\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [styleKey, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          } else if (\n            styleKey === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[styleKey] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  isFirstRender: boolean\n) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}